{"version":3,"file":"js/app.b610949c.js","mappings":"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","sources":["webpack://GraphDoc/./src/utils/data/uuid.ts","webpack://GraphDoc/./src/utils/graph.ts","webpack://GraphDoc/./src/utils/antv-model.ts","webpack://GraphDoc/./src/utils/modal.ts","webpack://GraphDoc/./src/components/shared/ModalComponent.vue?cb0b","webpack://GraphDoc/./src/components/shared/ModalComponent.vue","webpack://GraphDoc/./src/components/shared/easymde/EasymdeView.vue?661f","webpack://GraphDoc/./src/components/shared/easymde/EasymdeView.vue","webpack://GraphDoc/./src/components/shared/easymde/index.ts","webpack://GraphDoc/./src/components/graph/GraphModelerConfigBar.vue?1f5d","webpack://GraphDoc/./src/components/graph/GraphModelerConfigBar.vue","webpack://GraphDoc/./src/components/graph/GraphModelerElementsBar.vue?81ef","webpack://GraphDoc/./src/components/graph/GraphModelerElementsBar.vue","webpack://GraphDoc/./src/utils/data/indent.ts","webpack://GraphDoc/./src/utils/transformer/docassemble.ts","webpack://GraphDoc/./src/utils/transformer/antvis.ts","webpack://GraphDoc/./src/utils/data/pick.ts","webpack://GraphDoc/./src/utils/transformer/json.ts","webpack://GraphDoc/./src/utils/transformer/index.ts","webpack://GraphDoc/./src/components/graph/GraphModelerToolbar.vue?afc1","webpack://GraphDoc/./src/components/graph/GraphModelerToolbar.vue","webpack://GraphDoc/./src/components/graph/GraphValidationErrors.vue?4ece","webpack://GraphDoc/./src/components/graph/GraphValidationErrors.vue","webpack://GraphDoc/./src/utils/data/download.ts","webpack://GraphDoc/./src/components/graph/GraphModeler.vue?4f9c","webpack://GraphDoc/./src/components/graph/GraphModeler.vue","webpack://GraphDoc/./src/App.vue?cb76","webpack://GraphDoc/./src/App.vue","webpack://GraphDoc/./src/main.ts","webpack://GraphDoc/webpack/bootstrap","webpack://GraphDoc/webpack/runtime/chunk loaded","webpack://GraphDoc/webpack/runtime/compat get default export","webpack://GraphDoc/webpack/runtime/define property getters","webpack://GraphDoc/webpack/runtime/global","webpack://GraphDoc/webpack/runtime/hasOwnProperty shorthand","webpack://GraphDoc/webpack/runtime/make namespace object","webpack://GraphDoc/webpack/runtime/jsonp chunk loading","webpack://GraphDoc/webpack/startup"],"sourcesContent":["import { v4 as uuidv4 } from 'uuid';\nexport function uuid() {\n    return uuidv4()\n}","// This file is basically 'graphdoc-model'\n\nimport { node_types } from \"./antv-model\";\nimport { Filter } from \"@antv/x6/lib/registry\";\nimport { uuid } from \"./data/uuid\";\n\nexport type Id = string;\n\nexport interface Node {\n    graph: Graph\n    id: Id,\n\n    gd: {\n        type: keyof node_types,\n        variable?: string | null,\n        content?: string | null,\n    }\n    // content: {[lang: string]: string}, // for multilang support\n    \n    // options: {[key: string]: any},\n    appearance: {\n        x: number, y: number,\n        width: number, height: number,\n    },\n}\n\nexport const NodeDefault: Partial<Node> = {\n    appearance: {\n        x: 0, y: 0,\n        width: 100, height: 100\n    },\n    gd: {\n        type: 'notice', // notice is most generic\n        content: null,\n        variable: null\n    },\n}\n\nexport class Node {\n\n    constructor(options: Partial<Node> & Pick<Node, 'graph'>) {\n        if (typeof options.id == \"undefined\")\n            options.id = uuid();\n        // options.variable = `${options.id}`;\n\n        Object.assign(this, NodeDefault, options);\n    }\n\n    // not sure if this is the best method of determining the type\n    is_node() { return true; }\n    is_edge() { return false; }\n\n    get_label() {\n        // return this.gd.variable ?? this.gd.content ?? this.id.substring(0, 8);\n        return this.gd.variable ?? this.gd.content ?? `${ this.gd.type }_${this.id.toString().substring(0, 8)}`;\n    }\n\n    get_variable() {\n        // return this.gd.variable ?? this.gd.content ?? this.id.substring(0, 8);\n        return this.gd.variable ?? `${ this.gd.type }_${this.id.toString().substring(0, 8)}`;\n    }\n \n    get_edges_in() {\n        return this.graph.edges\n            .filter(edge => edge.node_to_id == this.id)\n    }\n\n    get_edges_out() {\n        return this.graph.edges\n            .filter(edge => edge.node_from_id == this.id)\n    }\n\n    get_nodes_in() {\n        const node_ids = this.get_edges_in()\n            .map(edge => edge.node_from_id) ?? []; // only return node_ids\n        return this.graph.nodes\n            .filter(node => node_ids.includes(node.id));\n    }\n\n    get_nodes_out() {\n        const node_ids = this.get_edges_out()\n            .map(edge => edge.node_to_id) ?? [];\n        return this.graph.nodes\n            .filter(node => node_ids.includes(node.id));\n    }\n\n}\n\n\nexport interface Edge {\n    graph: Graph\n    id: Id,\n    node_from_id: Id,\n    node_to_id: Id,\n    \n    gd: {\n        content: string | null,\n    }\n}\n\nexport const EdgeDefault: Partial<Edge> = {\n    gd: {\n        content: null,\n    }\n}\n\nexport class Edge {\n\n    constructor(options: Partial<Edge> & Pick<Edge, 'graph'>) {\n        options.id = options.id ?? uuid()\n\n        Object.assign(this, EdgeDefault, options);\n    }\n\n/*\n    constructor(graph: Graph, id: Id | null = null, node_from_id: Id, node_to_id: Id, content: string | null = null) {\n        this.graph = graph;\n        this.id = id ?? get_id();\n\n        this.node_from_id = node_from_id;\n        this.node_to_id = node_to_id;\n        this.content = content;\n    }\n*/\n\n    is_node() { return false; }\n    is_edge() { return true; }\n\n    get_node_from() {\n        return this.graph.nodes\n            .filter(node => node.id == this.node_from_id)[0]\n    }\n\n    get_node_to() {\n        return this.graph.nodes\n            .filter(node => node.id == this.node_to_id)[0]\n    }\n\n}\n\nclass Graph {\n    name: string;\n    nodes: Array<Node> = [];\n    edges: Array<Edge> = [];\n\n    constructor(name = 'Untitled graph') {\n        this.name = name;\n    }\n\n    get_nodes_by_type(type: keyof node_types) {\n        return this.nodes.filter(x => x.gd.type == type) ?? [];\n    }\n\n    // add_node(options: Partial<Node>) {\n    add_node(options: Partial<Node> & Pick<Node, 'id' | 'appearance' | 'gd'>) {\n        this.nodes.push(new Node({...options, graph: this}))\n    }\n\n    add_edge(options: Partial<Edge> & Pick<Edge, 'id' | 'node_from_id' | 'node_to_id' | 'gd'>) {\n        this.edges.push(new Edge({...options, graph: this}))\n    }\n    \n    clear() {\n        this.nodes = [];\n        this.edges = [];\n    }\n    \n}\n\nexport default Graph","import { Graph, Node as AntvNode, Path } from '@antv/x6';\nimport { Options } from '@antv/x6/lib/graph/options';\n\nimport { Node, NodeDefault } from './graph';\n\n// import '@antv/x6-vue-shape'\n\nexport const default_edge_label = (text: string | null = '') => {\n    if (text == null)\n        return null;\n\n    return {\n        attrs: {\n            text: {\n                text: text,\n            }\n        },\n        position: {\n            distance: .40,\n        },\n    }\n}\n\nexport const default_edge_attrs = {\n    // shape: 'dag-edge',\n    attrs: {\n        line: {\n            strokeWidth: '1',\n        },\n    },\n    zIndex: -1,\n}\n\nexport const graph_options_defaults: Partial<Options.Manual> = {\n    grid: true,\n\n    background: {\n        color: 'white'\n    },\n\n    mousewheel: {\n        enabled: true,\n        zoomAtMousePosition: true,\n        modifiers: 'ctrl',\n        minScale: 0.5,\n        maxScale: 3,\n    },\n\n    scroller: {\n        enabled: true,\n        pannable: true,\n    },\n\n    connecting: {\n\n        // https://x6.antv.vision/en/docs/tutorial/intermediate/interacting/#%E8%BF%9E%E7%BA%BF%E8%A7%84%E5%88%99\n        allowBlank: false,\n        allowMulti: false,\n        allowLoop: false,\n        allowEdge: false,\n\n        allowNode: false,\n        allowPort: true,\n\n        highlight: true,\n        snap: true,\n\n        // https://x6.antv.vision/en/examples/showcase/practices#dag\n        connector: 'algo-connector',\n        connectionPoint: 'boundary',\n        anchor: 'top',\n\n        validateMagnet({ e, magnet, view, cell }) {\n            // console.log(\"magnet\", e, magnet, view, cell)\n            return magnet.getAttribute('port-group') !== 'in'\n        },\n        createEdge(this) {\n            return this.createEdge(default_edge_attrs)\n        },\n\n        validateEdge({edge, type, previous}) {\n            // console.log(\"edge data\", edge)\n            // TODO: only allow (multiple) for decision\n            return true;\n        },\n\n        validateConnection({edge, sourceMagnet, targetMagnet}) {\n            if (sourceMagnet == null || targetMagnet == null)\n                return false;\n            \n            return sourceMagnet.getAttribute('port-group') == \"out\" &&\n                 targetMagnet.getAttribute('port-group') == \"in\";\n        },\n    },\n\n    history: {\n        enabled: true,\n        beforeAddCommand(event: any, args: any) {\n            // console.log(event, args);\n            // prevent adding/removing tools on hover to be added to history\n            if (args.key == 'tools')\n            {\n                return false\n            }\n        },\n    },\n    resizing: {\n        enabled: false,\n    },\n    selecting: {\n        enabled: true,\n        multiple: false,\n        \n    },\n\n}\n\nexport function graph_register_defaults(graph: Graph) {\n    /*\n    // https://x6.antv.vision/en/docs/api/registry/edge-tool\n    graph.on('edge:mouseenter', ({ cell }) => {\n        // console.log(cell)\n        cell.addTools(\n            [\n                {\n                    name: 'button-remove',\n                    args: {\n                        distance: 30,\n                        fill: '#000000'\n                    },\n                },\n            ]\n        )\n    })\n    graph.on('edge:mouseleave', ({ cell }) => {\n        setTimeout(() => {\n            cell.removeTool('button-remove')\n        }, 1500)\n    })\n    */\n\n    graph.on('node:mouseenter', ({ cell }) => {\n        cell.addTools([{name: 'button-remove'}])\n    })\n\n    graph.on('node:mouseleave', ({ cell }) => {\n        setTimeout(() => {\n            cell.removeTool('button-remove')\n        }, 1000)\n    })\n\n    Graph.registerConnector('algo-connector', (s, e) => {\n        const offset = 4\n        const deltaY = Math.abs(e.y - s.y)\n        const control = Math.floor((deltaY / 3) * 2)\n    \n        const v1 = { x: s.x, y: s.y + offset + control }\n        const v2 = { x: e.x, y: e.y - offset - control }\n    \n        return Path.normalize(\n            `M ${s.x} ${s.y}\n            L ${s.x} ${s.y + offset}\n            C ${v1.x} ${v1.y} ${v2.x} ${v2.y} ${e.x} ${e.y - offset}\n            L ${e.x} ${e.y}\n            `,\n        )\n    }, true)\n\n}\n\nconst default_port_groups = {\n    in: {\n        attrs: {\n            circle: {\n                r: 6,\n                stroke: \"#6a6a6b\",\n                magnet: true,\n            }\n        },\n        // markup: {\n        //     tagName: 'path',\n        //     selector: 'path',\n        //     attrs: {\n        //         d: \"M 0 5 L 6.25 -5 L -6.25 -5 L 0 5\",\n        //         fill: \"#fff\",\n        //         stroke: \"#6a6a6b\",\n        //         'stroke-width': \"1\",\n        //         magnet: true\n        //     }\n        // },\n        position: 'top'\n    },\n    out: {\n        attrs: {\n            circle: {\n                r: 6,\n                stroke: \"#6a6a6b\",\n                magnet: true,\n            }\n        },\n        // markup: {\n        //     tagName: 'path',\n        //     selector: 'path',\n        //     attrs: {\n        //         d: \"M 0 -5 L 6.25 5 L -6.25 5 L 0 -5\",\n        //         fill: \"#fff\",\n        //         stroke: \"#6a6a6b\",\n        //         'stroke-width': \"1\",\n        //         magnet: true\n        //     }\n        // },\n        position: 'bottom'\n    },\n}\n\nexport function default_node_ports(ports: Array<keyof typeof default_port_groups>) {\n    const default_ports = {\n        groups: default_port_groups,\n        items: [] as {id: string, group: keyof typeof default_port_groups}[]\n    }\n\n    for (const port_group of ports) {\n        default_ports.items.push({\n            id: `${port_group}-1`,\n            group: port_group,\n        })\n    }\n\n    return default_ports\n}\n\nexport type AntvNodeData = {\n    errors?: boolean,\n    is_stencil_node?: boolean,\n\n    gd: Node['gd'],\n}\n\nexport type node_types = {\n    [\n        key in \"start\" | \"notice\" | \"decision\" | \"end\"\n    ]: {\n        antv_metadata: Omit<AntvNode.Metadata, 'data'> & {data: Partial<AntvNodeData>}, // override 'data' type of antv\n        config_fields: {\n            general?: string[],\n            additional?: string[]\n        }\n    }\n};\nexport const node_type_default = 'notice';\n\nconst node_html = {\n    render(node: AntvNode) {\n        const data = node.getData() as AntvNodeData;\n\n        let label = '';\n        let label_class = '';\n\n        if (data.gd.variable) {\n            label = data.gd.variable;\n            label_class = 'node-label-variable';\n        } else if (data.gd.content) {\n            label = `\"${data.gd.content}\"`;\n            label_class = 'node-label-content';\n        } else if (data.is_stencil_node ?? false) {\n            label = `new ${data.gd.type} node`;\n            label_class = 'node-label-unnamed';\n        } else {\n            // label = `unnamed ${data.gd.type} node`;\n            label = `${ data.gd.type }_${node.id.toString().substring(0, 8)}`;\n            label_class = 'node-label-unnamed';\n        }\n\n        return(\n            `<div class=\"node node-${ data.gd.type } ${ data.errors ? 'node-has-errors' : '' }\">\n                <span class=\"${ label_class }\">${ label }</span>\n            </div>`\n        )\n    },\n    shouldComponentUpdate(node: AntvNode) {\n        return node.hasChanged('data')\n    },\n}\n\nexport const node_types: node_types = {\n    // https://github.com/eensander/graph-quiz/blob/master/resources/js/components/dashboard/graph/GraphModeler.vue#L112\n    start: {\n        antv_metadata: {\n            shape: 'html',\n            html: node_html,\n            // tools: ['button-remove'],\n            width: 180,\n            height: 36,\n            data: {\n                gd: Object.assign({}, NodeDefault.gd, {\n                    type: 'start'\n                }),\n            },\n            ports: default_node_ports(['out']),\n        },\n        config_fields: {\n            general: [\n                'variable',\n                'label',\n            ],\n            additional: [\n                // 'annotation'\n            ],\n        }\n    },\n    decision: {\n        antv_metadata: {\n            shape: 'html',\n            html: node_html,\n            // tools: ['button-remove'],\n            width: 180,\n            height: 36,\n\n            data: {\n                gd: Object.assign({}, NodeDefault.gd, {\n                    type: 'decision'\n                }),\n            },\n            ports: default_node_ports(['in', 'out']),\n        },\n        config_fields: {\n            general: [\n                'variable',\n                'label',\n            ],\n            additional: [\n                // 'annotation',\n                // 'subgraph'\n            ],\n        }\n    },\n    notice: {\n        antv_metadata: {\n            shape: 'html',\n            html: node_html,\n            // tools: ['button-remove'],\n            width: 180,\n            height: 36,\n            \n            data: {\n                gd: Object.assign({}, NodeDefault.gd, {\n                    type: 'notice'\n                }),\n            },\n            ports: default_node_ports(['in', 'out']),\n        },\n        config_fields: {\n            general: [\n                'variable',\n                'label',\n            ],\n            additional: [\n                // 'annotation'\n            ],\n        }\n    },\n    end: {\n        antv_metadata: {\n            shape: 'html',\n            html: node_html,\n            // tools: ['button-remove'],\n            width: 180,\n            height: 36,\n            \n            data: {\n                gd: Object.assign({}, NodeDefault.gd, {\n                    type: 'end'\n                }),\n            },\n            ports: default_node_ports(['in']),\n        },\n        config_fields: {\n            general: [\n                'variable',\n                'label',\n            ],\n        }\n    }\n}","import { reactive, Ref, ref, UnwrapNestedRefs } from \"vue\";\n\ntype TEvents = {\n    onOpen?: () => void;\n    onClose?: () => void;\n}\n\nexport class Modal<DataT extends object> {\n    // private _data: DataT; // for resetting state, like https://stackoverflow.com/a/61509432/17864167\n    data: UnwrapNestedRefs<DataT>;\n\n    events: TEvents\n    \n    constructor(data?: DataT, events?: TEvents) {\n        if (data)\n            this.data = reactive(data) as UnwrapNestedRefs<DataT>;\n        else\n            this.data = reactive({}) as UnwrapNestedRefs<DataT>;\n\n        this.events = {...events};\n    }\n\n    is_open = ref(false);\n    open() {\n        this.is_open.value = true;\n        if (this.events.onOpen)\n            this.events.onOpen();\n    }\n    close() {\n        this.is_open.value = false;\n        if (this.events.onClose)\n            this.events.onClose();\n    }\n}","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, renderSlot as _renderSlot, normalizeStyle as _normalizeStyle, withKeys as _withKeys, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, Transition as _Transition, withCtx as _withCtx, createVNode as _createVNode, Teleport as _Teleport, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-608b8ee0\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { class: \"modal-bg fixed inset-0 bg-gray-500 bg-opacity-75\" }, null, -1))\nconst _hoisted_2 = { class: \"fixed z-20 inset-0 overflow-y-auto\" }\nconst _hoisted_3 = { class: \"flex items-end sm:items-center justify-center min-h-full p-4 text-center\" }\n\nimport { Modal } from '@/utils/modal';\n\n\nexport default /*#__PURE__*/_defineComponent({\n  props: {\n    modal: null,\n    container_style: null\n  },\n  setup(__props: any) {\n\nconst props = __props as {\n    modal: Modal<object>,\n    container_style?: object,\n}\n\n\n\n// For closing on background click (i.e. mousedown AND mouseup outside of container)\nlet down_out_container = false;\n\nconst mousedown = (e: Event) => {\n    const down_target = e.target as Element;\n    const container = document.querySelector('.modal-container');\n    if (container != null && !container.contains(down_target as Element))\n        down_out_container = true;\n    else\n        down_out_container = false;\n}\n\nconst mouseup = (e: Event) => {\n    if (down_out_container) {\n        const up_target = e.target as Element;\n        const container = document.querySelector('.modal-container');\n        if (container != null && !container.contains(up_target as Element))\n            props.modal.close();\n    }\n}\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createBlock(_Teleport, { to: \"body\" }, [\n    _createVNode(_Transition, {\n      name: \"modal-transition\",\n      appear: \"\"\n    }, {\n      default: _withCtx(() => [\n        (props.modal.is_open.value)\n          ? (_openBlock(), _createElementBlock(\"div\", {\n              key: 0,\n              class: \"relative z-10\",\n              \"aria-labelledby\": \"modal-title\",\n              role: \"dialog\",\n              \"aria-modal\": \"true\",\n              onKeydown: _cache[0] || (_cache[0] = _withKeys(($event: any) => (props.modal.close()), [\"esc\"])),\n              tabindex: \"0\",\n              onMousedown: mousedown,\n              onMouseup: mouseup\n            }, [\n              _hoisted_1,\n              _createElementVNode(\"div\", _hoisted_2, [\n                _createElementVNode(\"div\", _hoisted_3, [\n                  _createElementVNode(\"div\", {\n                    class: \"modal-container relative bg-white rounded-lg text-left overflow-hidden shadow-xl sm:my-8 sm:max-w-md sm:w-full\",\n                    style: _normalizeStyle(props.container_style ?? {})\n                  }, [\n                    _renderSlot(_ctx.$slots, \"default\")\n                  ], 4)\n                ])\n              ])\n            ], 32))\n          : _createCommentVNode(\"\", true)\n      ]),\n      _: 3\n    })\n  ]))\n}\n}\n\n})","import script from \"./ModalComponent.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./ModalComponent.vue?vue&type=script&lang=ts&setup=true\"\n\nimport \"./ModalComponent.vue?vue&type=style&index=0&id=608b8ee0&scoped=true&lang=scss\"\n\nimport exportComponent from \"/home/sander/projects/public/graphdoc/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-608b8ee0\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nimport { onMounted, onUnmounted, Ref, ref } from 'vue';\n\nimport EasyMDE from 'easymde';\nimport 'easymde/dist/easymde.min.css';\n\n// :value and @input to mimick v-model. (does this work?)\n\nexport default /*#__PURE__*/_defineComponent({\n  props: {\n    options: null,\n    value: null\n  },\n  emits: ['change', 'input'],\n  setup(__props: any, { emit }) {\n\nconst props = __props as {\n    options: EasyMDE.Options,\n    value?: string\n}\n\n\n\n\nconst editor: Ref<EasyMDE | null> = ref(null);\nconst editorRef: Ref<HTMLElement | null> = ref(null);\n\nonMounted(() => {\n    \n    if (editorRef.value != null) {\n        const options = {\n            element: editorRef.value,\n            \n            initialValue: props.value,\n            spellChecker: false,\n\n            ...props.options\n        };\n        \n        editor.value = new EasyMDE(options);\n\n        editor.value.codemirror.on('change', (...args) => {\n            emit('change', editor.value, ...args);\n            emit('input', editor.value?.value());\n        })\n\n    }\n\n});\n\nonUnmounted(() => {\n    if (editor.value !== null) {\n        editor.value.cleanup();\n    }\n});\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"textarea\", {\n    ref_key: \"editorRef\",\n    ref: editorRef\n  }, null, 512))\n}\n}\n\n})","import script from \"./EasymdeView.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./EasymdeView.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./EasymdeView.vue?vue&type=style&index=0&id=452da337&lang=scss\"\n\nconst __exports__ = script;\n\nexport default __exports__","import EasymdeView from './EasymdeView.vue';\n\nexport default EasymdeView;","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, unref as _unref, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, Fragment as _Fragment, createVNode as _createVNode, withCtx as _withCtx, createBlock as _createBlock, renderList as _renderList, isRef as _isRef, vModelText as _vModelText, withDirectives as _withDirectives, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-2cb326fd\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { key: 0 }\nconst _hoisted_2 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { class: \"block p-2 text-gray-700\" }, \"Select a node or edge to configure\", -1))\nconst _hoisted_3 = [\n  _hoisted_2\n]\nconst _hoisted_4 = {\n  key: 1,\n  class: \"w-full p-3\"\n}\nconst _hoisted_5 = { class: \"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\" }\nconst _hoisted_6 = { class: \"mt-3 text-center sm:mt-0 sm:text-left\" }\nconst _hoisted_7 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", {\n  class: \"text-lg leading-6 font-medium text-gray-900\",\n  id: \"modal-title\"\n}, \"Edit content\", -1))\nconst _hoisted_8 = { class: \"mt-2\" }\nconst _hoisted_9 = { class: \"text-sm text-gray-500\" }\nconst _hoisted_10 = /*#__PURE__*/_createTextVNode(\" You can use \")\nconst _hoisted_11 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"a\", {\n  href: \"https://commonmark.org/help/\",\n  target: \"_blank\"\n}, \"markdown\", -1))\nconst _hoisted_12 = /*#__PURE__*/_createTextVNode(\" to add styles to the content displayed for this node. Text containing HTML code will be rendered as HTML. \")\nconst _hoisted_13 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", { class: \"text-sm text-gray-500 mt-1\" }, [\n  /*#__PURE__*/_createTextVNode(\" Docassmble uses Mako as a templating system, to allow for including variables and code in content. More on how to use this at \"),\n  /*#__PURE__*/_createElementVNode(\"a\", {\n    href: \"https://docassemble.org/docs/markup.html#mako\",\n    target: \"_blank\"\n  }, \"Docassemble\"),\n  /*#__PURE__*/_createTextVNode(\". \")\n], -1))\nconst _hoisted_14 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", { class: \"text-sm text-gray-500 mt-1\" }, [\n  /*#__PURE__*/_createTextVNode(\" Note that when referencing a variable, even in an 'if' statement, the block corresponding to the variable will be first shown to the user (regardless of the order specified in the graph). To show a variable only when it is defined, one can use the \"),\n  /*#__PURE__*/_createElementVNode(\"span\", { class: \"code text-gray-700\" }, \"defined('variable')\"),\n  /*#__PURE__*/_createTextVNode(\" function within Mako, as described at \"),\n  /*#__PURE__*/_createElementVNode(\"a\", {\n    href: \"https://docassemble.org/docs/markup.html#mako\",\n    target: \"_blank\"\n  }, \"Docassemble\"),\n  /*#__PURE__*/_createTextVNode(\". \")\n], -1))\nconst _hoisted_15 = { class: \"mt-4\" }\nconst _hoisted_16 = { class: \"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\" }\nconst _hoisted_17 = { class: \"\" }\nconst _hoisted_18 = { class: \"mb-2 text-ellipsis overflow-hidden font-mono block text-xl border-b border-gray-300\" }\nconst _hoisted_19 = { class: \"w-full\" }\nconst _hoisted_20 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"svg\", {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  class: \"h-5 w-5\",\n  fill: \"none\",\n  viewBox: \"0 0 24 24\",\n  stroke: \"currentColor\",\n  \"stroke-width\": \"2\"\n}, [\n  /*#__PURE__*/_createElementVNode(\"path\", {\n    \"stroke-linecap\": \"round\",\n    \"stroke-linejoin\": \"round\",\n    d: \"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n  })\n], -1))\nconst _hoisted_21 = [\n  _hoisted_20\n]\nconst _hoisted_22 = { class: \"my-2\" }\nconst _hoisted_23 = { class: \"mt-1 mb-3 block border-b border-gray-300 text-lg leading-6 font-medium text-gray-800\" }\nconst _hoisted_24 = { key: 0 }\nconst _hoisted_25 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { class: \"text-gray-700 block mb-1 text-sm\" }, \"Variable\", -1))\nconst _hoisted_26 = [\"placeholder\"]\nconst _hoisted_27 = { key: 1 }\nconst _hoisted_28 = { class: \"flex justify-between items-center mb-1\" }\nconst _hoisted_29 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  class: \"text-gray-700 block text-sm\",\n  for: \"textarea_content\"\n}, \"Content\", -1))\nconst _hoisted_30 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"svg\", {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  class: \"h-5 w-5\",\n  fill: \"none\",\n  viewBox: \"0 0 24 24\",\n  stroke: \"currentColor\",\n  \"stroke-width\": \"2\"\n}, [\n  /*#__PURE__*/_createElementVNode(\"path\", {\n    \"stroke-linecap\": \"round\",\n    \"stroke-linejoin\": \"round\",\n    d: \"M4 8V4m0 0h4M4 4l5 5m11-1V4m0 0h-4m4 0l-5 5M4 16v4m0 0h4m-4 0l5-5m11 5l-5-5m5 5v-4m0 4h-4\"\n  })\n], -1))\nconst _hoisted_31 = [\n  _hoisted_30\n]\nconst _hoisted_32 = {\n  key: 2,\n  class: \"w-full p-2\"\n}\nconst _hoisted_33 = { class: \"\" }\nconst _hoisted_34 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { class: \"mb-2 font-bold block text-2xl border-b border-gray-300\" }, \"Edge\", -1))\nconst _hoisted_35 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"svg\", {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  class: \"h-5 w-5\",\n  fill: \"none\",\n  viewBox: \"0 0 24 24\",\n  stroke: \"currentColor\",\n  \"stroke-width\": \"2\"\n}, [\n  /*#__PURE__*/_createElementVNode(\"path\", {\n    \"stroke-linecap\": \"round\",\n    \"stroke-linejoin\": \"round\",\n    d: \"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n  })\n], -1))\nconst _hoisted_36 = [\n  _hoisted_35\n]\nconst _hoisted_37 = {\n  key: 0,\n  class: \"my-2\"\n}\nconst _hoisted_38 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { class: \"my-2 block border-b border-gray-300 uppercase font-bold text-sm text-gray-800\" }, \"General\", -1))\nconst _hoisted_39 = { class: \"block mt-2\" }\nconst _hoisted_40 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", { class: \"text-gray-700 block mb-1\" }, \"Label\", -1))\nconst _hoisted_41 = { class: \"w-full my-2 text-right\" }\nconst _hoisted_42 = { key: 3 }\nconst _hoisted_43 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"Invalid cell selected\", -1))\nconst _hoisted_44 = [\n  _hoisted_43\n]\n\nimport { computed, ref } from 'vue';\n    import { default_edge_label, node_types, node_type_default, AntvNodeData } from '@/utils/antv-model'\n\n    import { Cell, Edge, Node } from '@antv/x6'\n\n    import titleCase from '@/utils/data/titleCase';\n    import { Modal } from '@/utils/modal';\n    import ModalComponent from '@/components/shared/ModalComponent.vue';\n\n    import EasymdeView from '@/components/shared/easymde'\n\n    \nexport default /*#__PURE__*/_defineComponent({\n  props: {\n    cell: null\n  },\n  setup(__props: any) {\n\nconst props = __props as {\n        cell: Cell | undefined\n    }\n\n\n    \n    \n    /* Modal definitions */\n    // const modal_field_content_editor = ref('');\n    const modal_field_content = new Modal({read_more: false, editor: ''}, {\n        onOpen: () => {\n            modal_field_content.data.editor = node_content.value;\n        }\n    });\n    const modal_field_content_accept = (modal: typeof modal_field_content) => {\n        node_content.value = modal.data.editor;\n        modal.close();\n    }\n\n    /* Computing current fields */\n    const current_fields = computed(() => {\n        const field = props.cell?.getData()?.node_type ?? node_type_default;\n        let current_node_fields = null;\n\n        if (Object.keys(node_types).includes(field))\n            current_node_fields = node_types[field as keyof node_types].config_fields;\n        else\n            current_node_fields = node_types[node_type_default].config_fields;\n\n        // https://stackoverflow.com/a/62400741/17864167\n        return Object.fromEntries(\n            Object.entries(current_node_fields)\n                .filter(([key, val]) => val.length > 0)\n        )\n    });\n\n    /* Computed properties as 'middleman' for entered data and antvis model. */\n\n    // The `utils/graph.ts` can't be used for storing data as it would require\n    // updating antvis, based on graph.ts, on every (content) update.\n\n    const node_content_ref = ref('');\n    const node_content = computed({\n        get() {\n            // https://github.com/antvis/X6/issues/2020#issuecomment-1104644438\n            // return (props.cell as Node).getAttrByPath('text/text') as string\n            node_content_ref.value;\n            return (props.cell as Node).getData().gd.content ?? '';\n        },\n        set(value: string) {\n            // (props.cell as Node).setAttrByPath('text/text', value)\n            node_content_ref.value = value;\n            (props.cell as Node).setData({gd: {content: value}});\n        }\n    });\n\n    const node_variable_ref = ref('');\n    const node_variable = computed({\n        get() {\n            node_variable_ref.value;\n            return ((props.cell as Node).getData() as AntvNodeData).gd.variable ?? '';\n        },\n        set(value: string) {\n            node_variable_ref.value = value;\n            (props.cell as Node).setData({gd: {variable: value != '' ? value : null}});\n        }\n    });\n\n    // only reason for 'edge_content_ref' is for adding reactivity to edge_content,\n    // relevant for pressing buttons\n    const edge_content_ref = ref('');\n    const edge_content = computed({\n        get() {\n            const edge = props.cell as Edge;\n            edge_content_ref.value;\n            return edge.getLabelAt(0)?.attrs?.text?.text?.toString() ?? '';\n        },\n        set(value: string) {\n            const edge = props.cell as Edge;\n\n            const edge_label = default_edge_label(value);\n            if (edge_label != null) {\n                edge.removeLabelAt(0);\n                edge.setLabelAt(0, edge_label);\n            }\n\n            edge_content_ref.value = value;\n            edge.setData({value})\n        }\n    });\n\n\nreturn (_ctx: any,_cache: any) => {\n  return (__props.cell == null)\n    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, _hoisted_3))\n    : (__props.cell.isNode())\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [\n          (_unref(modal_field_content).is_open)\n            ? (_openBlock(), _createBlock(ModalComponent, {\n                key: 0,\n                modal: _unref(modal_field_content),\n                container_style: {'max-width': '48rem'}\n              }, {\n                default: _withCtx(() => [\n                  _createElementVNode(\"div\", _hoisted_5, [\n                    _createElementVNode(\"div\", _hoisted_6, [\n                      _hoisted_7,\n                      _createElementVNode(\"div\", _hoisted_8, [\n                        _createElementVNode(\"p\", _hoisted_9, [\n                          _hoisted_10,\n                          _hoisted_11,\n                          _hoisted_12,\n                          _createElementVNode(\"span\", {\n                            class: \"ml-1 text-sm text-gray-800 cursor-pointer select-none hover:text-gray-700 hover:underline\",\n                            onClick: _cache[0] || (_cache[0] = ($event: any) => (_unref(modal_field_content).data.read_more = !_unref(modal_field_content).data.read_more))\n                          }, _toDisplayString(_unref(modal_field_content).data.read_more ? 'less' : 'more'), 1)\n                        ]),\n                        (_unref(modal_field_content).data.read_more)\n                          ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [\n                              _hoisted_13,\n                              _hoisted_14\n                            ], 64))\n                          : _createCommentVNode(\"\", true)\n                      ]),\n                      _createElementVNode(\"div\", _hoisted_15, [\n                        _createVNode(_unref(EasymdeView), {\n                          options: {},\n                          value: _unref(modal_field_content).data.editor,\n                          onInput: _cache[1] || (_cache[1] = e => _unref(modal_field_content).data.editor = e)\n                        }, null, 8, [\"value\"])\n                      ])\n                    ])\n                  ]),\n                  _createElementVNode(\"div\", _hoisted_16, [\n                    _createElementVNode(\"button\", {\n                      onClick: _cache[2] || (_cache[2] = ($event: any) => (modal_field_content_accept(_unref(modal_field_content)))),\n                      type: \"button\",\n                      class: \"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-blue-600 text-base font-medium text-white hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:ml-3 sm:w-auto sm:text-sm\"\n                    }, \"Accept\"),\n                    _createElementVNode(\"button\", {\n                      onClick: _cache[3] || (_cache[3] = ($event: any) => (_unref(modal_field_content).close())),\n                      type: \"button\",\n                      class: \"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\"\n                    }, \"Cancel\")\n                  ])\n                ]),\n                _: 1\n              }, 8, [\"modal\"]))\n            : _createCommentVNode(\"\", true),\n          _createElementVNode(\"div\", _hoisted_17, [\n            _createElementVNode(\"span\", _hoisted_18, _toDisplayString((__props.cell.getData() as AntvNodeData).gd.variable ?? \n                    `${ (__props.cell.getData() as AntvNodeData).gd.type }_${__props.cell.id.toString().substring(0, 8)}`), 1),\n            _createElementVNode(\"div\", _hoisted_19, [\n              _createElementVNode(\"button\", {\n                onClick: _cache[4] || (_cache[4] = ($event: any) => (__props.cell?.remove())),\n                class: \"btn btn-red\"\n              }, _hoisted_21)\n            ]),\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(current_fields), (fields, field_group) => {\n              return (_openBlock(), _createElementBlock(\"div\", { key: field_group }, [\n                _createElementVNode(\"div\", _hoisted_22, [\n                  _createElementVNode(\"span\", _hoisted_23, _toDisplayString(field_group.toString()[0].toUpperCase().concat(field_group.toString().substring(1))), 1),\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(fields, (field) => {\n                    return (_openBlock(), _createElementBlock(\"div\", {\n                      key: field,\n                      class: \"block mt-2 mb-1\"\n                    }, [\n                      (field == 'variable')\n                        ? (_openBlock(), _createElementBlock(\"label\", _hoisted_24, [\n                            _hoisted_25,\n                            _createElementVNode(\"div\", null, [\n                              _withDirectives(_createElementVNode(\"input\", {\n                                class: \"style-soft w-full font-mono\",\n                                type: \"text\",\n                                \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => (_isRef(node_variable) ? (node_variable).value = $event : null)),\n                                placeholder: `${ (__props.cell.getData() as AntvNodeData).gd.type }_${__props.cell.id.toString().substring(0, 8)}`\n                              }, null, 8, _hoisted_26), [\n                                [_vModelText, _unref(node_variable)]\n                              ])\n                            ])\n                          ]))\n                        : _createCommentVNode(\"\", true),\n                      (field == 'label')\n                        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_27, [\n                            _createElementVNode(\"div\", _hoisted_28, [\n                              _hoisted_29,\n                              _createElementVNode(\"button\", {\n                                class: \"btn text-sm\",\n                                onClick: _cache[6] || (_cache[6] = ($event: any) => (_unref(modal_field_content).open()))\n                              }, _hoisted_31)\n                            ]),\n                            _createElementVNode(\"div\", null, [\n                              _withDirectives(_createElementVNode(\"textarea\", {\n                                id: \"textarea_content\",\n                                style: {\"min-height\":\"4rem\"},\n                                class: \"w-full style-soft\",\n                                type: \"text\",\n                                \"onUpdate:modelValue\": _cache[7] || (_cache[7] = ($event: any) => (_isRef(node_content) ? (node_content).value = $event : null))\n                              }, null, 512), [\n                                [_vModelText, _unref(node_content)]\n                              ])\n                            ])\n                          ]))\n                        : _createCommentVNode(\"\", true)\n                    ]))\n                  }), 128))\n                ])\n              ]))\n            }), 128))\n          ])\n        ]))\n      : (__props.cell.isEdge())\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_32, [\n            _createElementVNode(\"div\", _hoisted_33, [\n              _hoisted_34,\n              _createElementVNode(\"div\", null, [\n                _createElementVNode(\"button\", {\n                  onClick: _cache[8] || (_cache[8] = ($event: any) => (__props.cell?.remove())),\n                  class: \"btn btn-red\"\n                }, _hoisted_36)\n              ]),\n              ((__props.cell.getSourceCell()?.getData() as AntvNodeData).gd.type == 'decision')\n                ? (_openBlock(), _createElementBlock(\"div\", _hoisted_37, [\n                    _hoisted_38,\n                    _createElementVNode(\"div\", _hoisted_39, [\n                      _createElementVNode(\"label\", null, [\n                        _hoisted_40,\n                        _withDirectives(_createElementVNode(\"input\", {\n                          type: \"text\",\n                          class: \"style-soft w-full\",\n                          \"onUpdate:modelValue\": _cache[9] || (_cache[9] = ($event: any) => (_isRef(edge_content) ? (edge_content).value = $event : null))\n                        }, null, 512), [\n                          [_vModelText, _unref(edge_content)]\n                        ])\n                      ]),\n                      _createElementVNode(\"div\", _hoisted_41, [\n                        _createElementVNode(\"button\", {\n                          class: \"inline btn mr-2\",\n                          onClick: _cache[10] || (_cache[10] = ($event: any) => (edge_content.value = 'Yes'))\n                        }, \"Yes\"),\n                        _createElementVNode(\"button\", {\n                          class: \"inline btn\",\n                          onClick: _cache[11] || (_cache[11] = ($event: any) => (edge_content.value = 'No'))\n                        }, \"No\")\n                      ])\n                    ])\n                  ]))\n                : _createCommentVNode(\"\", true)\n            ])\n          ]))\n        : (_openBlock(), _createElementBlock(\"div\", _hoisted_42, _hoisted_44))\n}\n}\n\n})","import script from \"./GraphModelerConfigBar.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./GraphModelerConfigBar.vue?vue&type=script&lang=ts&setup=true\"\n\nimport \"./GraphModelerConfigBar.vue?vue&type=style&index=0&id=2cb326fd&lang=scss&scoped=true\"\n\nimport exportComponent from \"/home/sander/projects/public/graphdoc/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-2cb326fd\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass } from \"vue\"\n\nconst _hoisted_1 = { class: \"shape-holder\" }\nconst _hoisted_2 = [\"data-type\"]\n\nimport { Addon, Graph } from '@antv/x6';\n    import { Dnd } from '@antv/x6/lib/addon/dnd';\n    \n    import { onMounted, Ref, ref, watch } from 'vue';\n    import { node_types } from '@/utils/antv-model';\n\n    \nexport default /*#__PURE__*/_defineComponent({\n  props: {\n    graph: null\n  },\n  setup(__props: any) {\n\nconst props = __props as {\n        graph: Graph | undefined,\n        // node_type_defaults: Object\n    }\n\n    // https://github.com/antvis/X6/blob/master/sites/x6-sites-demos/packages/tutorial/basic/dnd/dnd/src/app.tsx\n\n    \n\n    const dnd: Ref<Dnd | undefined> = ref();\n\n    onMounted(() => {\n        // https://github.com/antvis/X6/blob/master/sites/x6-sites-demos/packages/tutorial/basic/dnd/dnd/src/app.tsx\n        // https://x6.antv.vision/en/docs/tutorial/basic/dnd\n\n        // console.log(dnd.value);\n    })\n\n    watch(() => props.graph, (value: typeof props.graph) => {\n        if (typeof value !== \"undefined\")\n            init_dnd(value)\n\n        // console.log(\"node-create\", Node.create(node_types[\"notice\"]))\n    })\n\n    const init_dnd = (graph: Graph) => {\n        dnd.value = new Addon.Dnd({\n            target: graph,\n            scaled: false,\n            animation: true,\n            validateNode(droppingNode) {\n                droppingNode.updateData({'is_stencil_node': undefined});\n                return true;\n            },\n            \n        })\n    }\n    \n    const startDrag = (e: MouseEvent) => {\n        if (typeof props.graph == \"undefined\")\n            return false;\n\n        /*\n        const types = {\n            'rect': {\n                width: 100,\n                height: 40,\n                attrs: {\n                    label: {\n                        text: 'Rect',\n                        fill: '#6a6c8a',\n                    },\n                    body: {\n                        stroke: '#31d0c6',\n                        strokeWidth: 2,\n                    },\n                },\n            },\n            'circle': {\n                width: 100,\n                height: 40,\n                shape: 'html',\n                html: () => {\n                    const wrap = document.createElement('div')\n                    wrap.style.width = '100%'\n                    wrap.style.height = '100%'\n                    wrap.style.display = 'flex'\n                    wrap.style.alignItems = 'center'\n                    wrap.style.justifyContent = 'center'\n                    wrap.style.border = '2px solid rgb(49, 208, 198)'\n                    wrap.style.background = '#fff'\n                    wrap.style.borderRadius = '100%'\n                    wrap.innerText = 'Circle'\n                    return wrap\n                },\n            }\n        };\n        */\n\n        const target = e.currentTarget\n        const type = (target as HTMLElement).getAttribute('data-type')!\n\n        if (!(type in node_types)) {\n            return false\n        }\n\n        const node = props.graph.createNode(node_types[type as keyof node_types].antv_metadata);\n\n        // node.label = type\n        // node.setData({label: type})\n        \n        // (node as any).setLabel(type)\n        // node.setAttrByPath('text/text', type)\n        node.setData({label: type, is_stencil_node: true})\n        \n        dnd.value?.start(node, e)\n\n    }\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(node_types), (node_type, node_type_name) => {\n      return (_openBlock(), _createElementBlock(\"div\", {\n        key: node_type_name,\n        class: _normalizeClass(`node node-${node_type_name}`),\n        \"data-type\": node_type_name,\n        onMousedown: _cache[0] || (_cache[0] = ($event: any) => (startDrag($event)))\n      }, _toDisplayString(node_type_name), 43, _hoisted_2))\n    }), 128))\n  ]))\n}\n}\n\n})","import script from \"./GraphModelerElementsBar.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./GraphModelerElementsBar.vue?vue&type=script&lang=ts&setup=true\"\n\nimport \"./GraphModelerElementsBar.vue?vue&type=style&index=0&id=b04a0d60&lang=scss\"\n\nconst __exports__ = script;\n\nexport default __exports__","// from: self\nexport function indent(lines: string[], indent = 1, spaces_per = 2): string[] {\n    return lines.map(line => ' '.repeat(indent*2).concat(line))\n}","import { ITransformer } from \".\";\nimport Graph, { Edge, Node } from \"../graph\";\nimport { indent } from \"@/utils/data/indent\"\n\nexport type validationErrorPart = string | Node | Edge;\nexport type validationErrorList = Array<validationErrorPart>[];\n\nexport class DocassembleTransformer implements ITransformer  {\n\n    validate_graph(graph: Graph): validationErrorList {\n        const errors: validationErrorList = [];\n\n        // General graph errors\n        const node_start = graph.get_nodes_by_type('start');\n        if (node_start.length !== 1)\n            errors.push([`graph must have exactly one start node (has ${node_start.length})`]);\n        const nodes_end = graph.get_nodes_by_type('end');\n        if (nodes_end.length === 0)\n            errors.push([`graph must have atleast one end node`])\n\n        // General input/output amount errors, and uniqueness of ID's.\n        const variable_list: {[variable: string]: {amount: number, nodes: Node[]}} = {};\n        for (const node of graph.nodes) {\n\n            // Add variables to list in this phase, to save iterations\n            const node_var = this.da_node_get_variable(node);\n            if (node_var in variable_list) {\n                variable_list[node_var].amount += 1;\n                variable_list[node_var].nodes.push(node);\n            } else {\n                variable_list[node_var] = {amount: 1, nodes: [node]};\n            }\n            \n            // Interpreting of edge amount errors\n            if (node.gd.type == 'start' && node.get_edges_out().length !== 1)\n                errors.push(['start node ', node, ` must have 1 outgoing edge (has ${node.get_edges_out().length})`])\n\n            // else if (node.type == 'decision' && node.get_edges_out().length === 1)\n            //     errors.push(`decision node with label ${node.content} has one outgoing edge, which makes it purpose trivial`) // warning\n            else if (node.gd.type == 'decision' && node.get_edges_in().length === 0)\n                errors.push(['decision node ', node, ' must have atleast one ingoing edge'])\n            else if (node.gd.type == 'decision' && node.get_edges_out().length === 0)\n                errors.push(['decision node ', node, ' must have atleast one outgoing edge'])\n\n            else if (node.gd.type == 'notice' && node.get_edges_in().length === 0)\n                errors.push(['notice node ', node, ' must have atleast one ingoing edge'])\n            else if (node.gd.type == 'notice' && node.get_edges_out().length !== 1)\n                errors.push(['notice node ', node, ' must have one outgoing edge'])\n\n            else if (node.gd.type == 'end' && node.get_edges_in().length === 0){\n                errors.push(['end node ', node, ' must have atleast one ingoing edge'])\n            }\n        }\n\n        // Checking variable names: duplicate and invalid names\n        for (const [variable, {amount, nodes}] of Object.entries(variable_list)) {\n\n            const seperated_error_nodes: (string | Node)[] = [];\n            nodes.forEach((node, i) => {\n                seperated_error_nodes.push(node);\n                if (i < (nodes.length - 1))\n                   seperated_error_nodes.push(', ');\n            })\n\n            if (!variable.match(/^[a-zA-Z_][a-zA-Z0-9_]*$/))\n                errors.push([\n                    `invalid (python) variable name '${variable}' on the node(s): `,\n                    ...seperated_error_nodes\n                ])\n\n            if (amount > 1) {\n                errors.push([\n                    `variable name '${variable}' occurs is defined more than once, in the nodes: `,\n                    ...seperated_error_nodes\n                ]);\n            }\n        }\n\n        // Decision-node specific errors\n        const nodes_decision = graph.get_nodes_by_type('decision');\n        for(const node_decision of nodes_decision) {\n            let has_edge_out_content_null = false;\n\n            const content_edges_out: {[content: string]: number} = {};\n            const node_edges_out = node_decision.get_edges_out();\n\n            for (const edge_out of node_edges_out) {\n                if (edge_out.gd.content == null)\n                    has_edge_out_content_null = true;\n                \n                // if length == 1, to ensure it's only printed once\n                // if (content_edges_out.filter(x => x == edge_out.content).length == 1)\n                //     errors.push(`decision node with label '${node_decision.content}' has multiple edges with content '${ edge_out.content }' (should be unique)`)\n                \n                if (edge_out.gd.content != null){\n                    // https://stackoverflow.com/a/39591024\n                    content_edges_out[edge_out.gd.content] = (content_edges_out[edge_out.gd.content]+1) || 1 ;\n                }\n            }\n            \n            if (has_edge_out_content_null)\n                errors.push(['decision node ', node_decision, ' has atleast one outgoing edge with no content']);\n            \n            Object.entries(content_edges_out).forEach(([content, amount]) => {\n                \n                if (amount > 1) {\n                    const edges = node_edges_out.filter(edge => edge.gd.content = content);\n                    const error_start: validationErrorPart[] = [\n                        `the decision node `, \n                        node_decision, \n                        ` has multiple edges with content '${ edges[0].gd.content }' on the edges: `,\n                    ];\n                    edges.forEach((tmp_edge, i) => {\n                        error_start.push(tmp_edge)\n                        if (i < (edges.length - 1))\n                            error_start.push(', ')\n                    })\n\n                    errors.push(error_start)\n                }\n            });\n        }\n\n        // only perform cycle check if no other errors are present\n        if (errors.length === 0) {\n            \n            // Cycle detection algorithm: https://en.wikipedia.org/wiki/Topological_sorting#Kahn's_algorithm\n\n            const L = [];\n            const S = graph.nodes.filter(x => x.get_edges_in().length === 0);\n\n            let edges = [...graph.edges]\n\n            while (S.length > 0) {\n                const n = S.pop()!;\n                L.push(n);\n\n                for (const e of edges.filter(x => x.node_from_id == n.id)) {\n                    const m = e.get_node_to();\n\n                    edges = edges.filter(x => !(x.id==e.id)) // remove e from edges\n                    if (edges.filter(x => x.node_to_id == m.id).length === 0)\n                        S.push(m)\n                }\n            }\n\n            if (edges.length > 0) {\n                errors.push(['graph must not contain cycles/loops'])\n            }\n        }\n\n        return errors;\n    }\n    \n    da_node_get_variable(node: Node): string {\n        // return `${ node.type }_${ node.variable }`\n        // return node.gd.variable ?? `${ node.gd.type }_${node.id.toString().substring(0, 8)}`;\n        return node.get_variable();\n    }\n    \n    da_node_escaped_markdown(node: Node): string {\n        if (!node.gd.content)\n            return `'[content of node ${ node.id.substring(0, 8) }]'`;\n\n        const lines = node.gd.content.split(/\\r?\\n/);\n        const escaped = [];\n        for (const line of lines) {\n            escaped.push(`${line}`);\n        }\n        return \"|\\n\".concat(indent(escaped).join(\"\\n\"));\n    }\n    \n    /**\n     * Construct python code block for docassemble, from given graph and node\n     * Performs recursive preorder depth-first search\n     * @param node The root node to start traversal from\n     * @param indent To indent this code relative to indent of current node\n     * @returns string[] lines of code\n     */\n    da_build_logic(graph: Graph, node: Node): string[] {\n\n        const node_edges_out = node.get_edges_out();\n        \n        const code: string[] = [];\n\n        switch(node.gd.type) {\n            case 'start': {\n                code.push(...[ this.da_node_get_variable(node) ])\n\n                for(const node_edge_out of node_edges_out) \n                    code.push(...this.da_build_logic(graph, node_edge_out.get_node_to()));\n\n                break\n            }\n            case 'end':\n                code.push(`${ this.da_node_get_variable(node) }`);\n\n                break\n            case 'decision': {\n\n                for(const node_edge_out of node_edges_out) {            \n                    const node_edge_out_content = node_edge_out.gd.content;\n                    if (node_edge_out_content == null)\n                        continue\n\n                    const sub_node = this.da_build_logic(graph, node_edge_out.get_node_to())\n\n                    code.push(`if ${ this.da_node_get_variable(node) } == '${ node_edge_out.gd.content }':`);\n                    code.push(...indent(sub_node || ['pass'], 1))\n                }\n                \n                break\n            }\n            case 'notice': {\n                code.push(`${ this.da_node_get_variable(node) }`);\n\n                for(const node_edge_out of node_edges_out) \n                    code.push(...this.da_build_logic(graph, node_edge_out.get_node_to()));\n                \n                break\n            }\n        }\n\n        return code\n    }\n\n    /**\n     * Generate the docassemble interview configuration content\n     * @param graph Graph object satisfying the contract in utils/graph.ts\n     *              and has been verified according to the validate_graph() \n     * @returns string docassemble interview code\n     */\n    out(graph: Graph): string {\n\n        const node_start = graph.get_nodes_by_type('start')[0];\n        const nodes_end = graph.get_nodes_by_type('end');\n\n        const blocks: Array<string[] | string> = [];\n        \n        for (const node of graph.nodes) {\n\n            switch(node.gd.type) {\n                case 'start':\n                    blocks.push([\n                        'question: Start',\n                        `subquestion: ${ this.da_node_escaped_markdown(node) }`,\n                        `continue button field: ${ this.da_node_get_variable(node) }`,\n                    ]);\n\n                    break\n                case 'end':\n                    blocks.push([\n                        `event: ${ this.da_node_get_variable(node) }`,\n                        'question: End',\n                        `subquestion: ${ this.da_node_escaped_markdown(node) }`,\n                    ]);\n\n                    break\n                case 'decision': {\n                    \n                    const edges_out = graph.edges\n                        .filter(edge => edge.node_from_id == node.id);\n                    \n                    let buttons: Array<string> = [];\n\n                    for (const edge_out of edges_out) {\n                        if (edge_out.gd.content != null)\n                            buttons.push(`  - \"${ edge_out.gd.content }\"`)\n                    }\n\n                    // TODO: add option for priority of buttons (instead of sort)\n                    buttons.sort()\n\n                    if (buttons.length > 0)\n                        buttons = ['buttons:', ...buttons]\n\n                    blocks.push([\n                        'question: Question',\n                        `subquestion: ${ this.da_node_escaped_markdown(node) }`,\n                        `field: ${ this.da_node_get_variable(node) }`,\n                        ...buttons\n                    ]);\n\n                    break\n                }\n                case 'notice': {\n                    blocks.push([\n                        'question: Notice',\n                        `subquestion: ${ this.da_node_escaped_markdown(node) }`,\n                        `continue button field: ${ this.da_node_get_variable(node) }`,\n                    ]);\n\n                    break\n                }\n            }\n        }\n        \n        const logic_code: string[] = [];\n        logic_code.push(...indent(this.da_build_logic(graph, node_start)));\n\n        if (logic_code.length > 0) {\n            blocks.push([\n                'mandatory: True',\n                'code: |', ...logic_code\n            ])\n        }\n        \n        let content = blocks.map((block) => {\n            if (typeof block == \"string\")\n                return block;\n            else if(Array.isArray(block))\n                return block.join(\"\\n\");\n        }).join(\"\\n---\\n\")\n        \n        return content;\n    }\n}","import Graph from \"../graph\";\nimport { Graph as AntvGraph } from \"@antv/x6\";\nimport { AntvNodeData, default_edge_attrs, default_edge_label, default_node_ports, node_types, node_type_default } from \"../antv-model\";\nimport { ITransformer } from \".\";\nimport { uuid } from \"../data/uuid\";\n\nexport class AntvisTransformer implements ITransformer {\n\n\n    // inspired from: https://github.com/eensander/graph-quiz/blob/master/resources/js/components/dashboard/graph/GraphModeler.vue#L442\n    in(graph: Graph, antv_graph: AntvGraph): Graph {\n        graph.clear();\n\n        const local_data = {\n            'nodes': antv_graph.getNodes(),\n            'edges': antv_graph.getEdges(),\n        };\n        \n        for(const loc_node of local_data.nodes) {\n            const loc_node_data = loc_node.getData() as AntvNodeData\n            const rem_node = {\n                id: loc_node.id,\n                gd: loc_node_data.gd,\n\n                appearance: {\n                    x: loc_node.getPosition().x ?? 0,\n                    y: loc_node.getPosition().y ?? 0,\n                    width: loc_node.getSize().width\n                        ?? node_types[loc_node_data.gd.type].antv_metadata.width,\n                    height: loc_node.getSize().height \n                        ?? node_types[loc_node_data.gd.type].antv_metadata.height,\n                }\n            }\n            \n            graph.add_node(rem_node)\n        }\n        \n        for(const loc_edge of local_data['edges']) {\n            // console.log(\"loc_edge\", loc_edge);\n\n            // both source and target ought to be known (non null)\n            if (loc_edge.getSourceCell() == null || loc_edge.getTargetCell() == null)\n                continue\n\n            let edge_content = loc_edge.getLabelAt(0)?.attrs?.text?.text?.toString() ?? null;\n            if (edge_content == \"\")\n                edge_content = null;\n\n            const rem_edge = {\n                id: loc_edge.id,\n                \n                node_from_id: loc_edge.getSourceCellId(),\n                node_to_id:   loc_edge.getTargetCellId(),\n\n                gd: {\n                    content: edge_content,\n                },\n                \n                appearance: {\n                    vertices: loc_edge.getVertices(),\n                },\n            }\n\n            graph.add_edge(rem_edge)\n        }\n\n        return graph;\n    }\n\n    // inspired from: https://github.com/eensander/graph-quiz/blob/master/resources/js/components/dashboard/graph/GraphModeler.vue#L525\n    out(graph: Graph) {\n\n        const data_nodes: Array<any> = [];\n        let last_x = 0;\n        \n        Object.values(graph.nodes).forEach((node) => {\n\n            let node_ser = {\n                // default values (includes ports etc); can be overwritten after spread\n                ...node_types[node.gd.type].antv_metadata,\n\n                // id: `node-${node.id}`,\n                id: node.id,\n\n                x: node.appearance?.x ?? (last_x += 50),\n                y: node.appearance?.y ?? 50,\n\n                data: {\n                    gd: node.gd\n                },\n            }\n\n            // https://stackoverflow.com/a/58245240\n            node_ser = Object.assign(\n                {},\n                node_types[node.gd.type].antv_metadata ?? node_types.notice.antv_metadata ?? {},\n                node_ser,\n            );\n\n            // because there are defaults\n            /*\n            if (node_ser.width == null && node.appearance?.width != null)\n                node_ser.width = node.appearance.width;\n            if (node_ser.height == null && node.appearance?.height != null)\n                node_ser.height = node.appearance.height;\n            */\n            \n            data_nodes.push(node_ser);\n        })\n        \n        const data_edges: Array<any> = [];\n\n        Object.values(graph.edges).forEach((edge) => {\n            const edge_label = default_edge_label(edge.gd.content);\n\n            const edge_ser = {\n                ...default_edge_attrs,\n\n                // id: `edge-${edge.id}`,\n                id: edge.id,\n\n                labels: edge_label != null ? [ edge_label ] : [],\n\n                source: {\n                    // cell: `node-${edge.node_from_id}`,\n                    cell: edge.node_from_id,\n                    port: 'out-1'\n                },\n                target: {\n                    // cell: `node-${edge.node_to_id}`,\n                    cell: edge.node_to_id,\n                    port: 'in-1'\n                },\n\n                data: {\n                    // edge_id: edge.id,\n                    gd: edge.gd\n                },\n\n            }\n\n            data_edges.push(edge_ser)\n        })\n\n\n        const data = {\n            nodes: data_nodes,\n            edges: data_edges,\n        }\n\n        // this.graph.fromJSON(data);\n\n        return data;\n    }\n}","// from: https://stackoverflow.com/a/47232883/17864167 (2022-04-22)\nexport function pick<T, K extends keyof T>(obj: T, ...keys: K[]): Pick<T, K> {\n  const ret: any = {};\n  keys.forEach(key => {\n    ret[key] = obj[key];\n  })\n  return ret;\n}","import { pick } from \"@/utils/data/pick\";\nimport Graph, { Edge, Node } from \"@/utils/graph\";\n\n// export type JSONGraphData = Partial<Graph> & Pick<Graph, 'name' | 'nodes' | 'edges'>\n// export type JSONGraphData = Partial<Graph> & Pick<Graph, 'name'> & {\nexport type JSONGraphData = {\n    'main': {\n        'name': string\n    },\n    'nodes': Array<Partial<Node> & Pick<Node, 'id' | 'appearance' | 'gd'>>,\n    'edges': Array<Partial<Edge> & Pick<Edge, 'id' | 'node_from_id' | 'node_to_id' | 'gd'>>,\n}\n\nexport class JSONTransformer {\n    \n    in_json(graph: Graph, data: JSONGraphData) {\n        graph.clear();\n\n        graph.name = data.main.name;\n        for (const node of data.nodes) {\n            graph.add_node(node)\n        }\n        for (const edge of data.edges) {\n            graph.add_edge(edge)\n        }\n        \n        return graph;\n    }\n\n    out_json(graph: Graph) {\n        \n        const data = {\n            'nodes': graph.nodes.map(node => pick(node, 'id', 'appearance', 'gd')),\n            'edges': graph.edges.map(edge => pick(edge, 'id', 'node_from_id', 'node_to_id', 'gd')),\n            'main': {\n                'name': graph.name\n            }\n        }\n\n        return data;\n    }\n\n}","import { Graph as AntvGraph } from \"@antv/x6\";\nimport { default as Graph, } from \"../graph\";\nimport { DocassembleTransformer } from \"./docassemble\";\nimport { AntvisTransformer } from \"./antvis\";\nimport { JSONGraphData, JSONTransformer } from \"./json\";\n\nexport interface ITransformer {\n    in?: (graph: Graph, ...params: Array<any>) => Graph\n    out: (graph: Graph, ...params: Array<any>) => any\n}\n\nexport default class {\n\n    graph: Graph;\n    json: JSONTransformer;\n    antvis: AntvisTransformer;\n    docassemble: DocassembleTransformer;\n\n    \n    constructor(graph?: Graph) {\n        this.graph = graph ?? new Graph();\n\n        this.json = new JSONTransformer()\n        this.antvis = new AntvisTransformer()\n        this.docassemble = new DocassembleTransformer()\n    }\n\n    // json\n\n    in_json(data: JSONGraphData) {\n        this.graph = this.json.in_json(this.graph, data);\n\n        return this;\n    }\n\n    out_json() {\n        return this.json.out_json(this.graph);\n    }\n\n    // antv\n\n    in_antv(antv_graph: AntvGraph) {\n        this.graph = this.antvis.in(this.graph, antv_graph)\n\n        return this;\n    }\n\n    out_antv() {\n        return this.antvis.out(this.graph)\n    }\n\n    // docassemble\n    \n    out_docassemble() {\n        return this.docassemble.out(this.graph)\n    }\n}","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, createElementVNode as _createElementVNode, openBlock as _openBlock, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, withCtx as _withCtx, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\" }\nconst _hoisted_2 = { class: \"sm:flex sm:items-start\" }\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-blue-100 sm:mx-0 sm:h-10 sm:w-10\" }, [\n  /*#__PURE__*/_createElementVNode(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    class: \"h-6 w-6\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    stroke: \"currentColor\",\n    \"stroke-width\": \"2\"\n  }, [\n    /*#__PURE__*/_createElementVNode(\"path\", {\n      class: \"stroke-blue-900\",\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\",\n      d: \"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-8l-4-4m0 0L8 8m4-4v12\"\n    })\n  ])\n], -1)\nconst _hoisted_4 = { class: \"mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left w-full\" }\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"h3\", {\n  class: \"text-lg leading-6 font-medium text-gray-900\",\n  id: \"modal-title\"\n}, \"Import\", -1)\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mt-2 text-sm text-gray-500\" }, \"Paste the data of the exported interview below.\", -1)\nconst _hoisted_7 = { class: \"block mt-2 text-sm text-gray-500\" }\nconst _hoisted_8 = /*#__PURE__*/_createTextVNode(\"or \")\nconst _hoisted_9 = { class: \"text-sm cursor-pointer text-gray-800 bg-gray-100 hover:bg-gray-200 border border-gray-400 py-0.5 px-1 mx-0.5 rounded-md\" }\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"span\", null, \"upload a file\", -1)\nconst _hoisted_11 = /*#__PURE__*/_createTextVNode(\" instead.\")\nconst _hoisted_12 = { class: \"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\" }\nconst _hoisted_13 = { class: \"toolbar\" }\nconst _hoisted_14 = { class: \"toolbar-item\" }\nconst _hoisted_15 = [\"disabled\"]\nconst _hoisted_16 = { class: \"toolbar-item\" }\nconst _hoisted_17 = [\"disabled\"]\nconst _hoisted_18 = { class: \"toolbar-item\" }\nconst _hoisted_19 = [\"disabled\"]\nconst _hoisted_20 = { class: \"toolbar-item\" }\nconst _hoisted_21 = [\"disabled\"]\nconst _hoisted_22 = { class: \"toolbar-item\" }\nconst _hoisted_23 = [\"disabled\"]\n\nimport { nextTick, Ref, ref } from 'vue';\n    import { Addon, Graph } from '@antv/x6';\n    import Transformer from '@/utils/transformer'\n    import { JSONGraphData } from '@/utils/transformer/json';\n    import { useToast } from 'vue-toastification';\n    \n    import ModalComponent from '@/components/shared/ModalComponent.vue'\n    import { Modal } from '@/utils/modal';\n\n    \nexport default /*#__PURE__*/_defineComponent({\n  props: {\n        graph: {\n            type: Graph,\n        },\n        docassemble_cont_update: {\n            type: Function,\n        },\n        init_modeler: {\n            type: Function,\n        }\n    },\n  setup(__props) {\n\nconst props = __props\n\n    // https://github.com/antvis/X6/blob/master/sites/x6-sites-demos/packages/tutorial/basic/dnd/dnd/src/app.tsx\n\n    const toast = useToast();\n\n    /* Modal definitions */\n    const el_modal_import_text: Ref<HTMLElement | null> = ref(null);\n    const modal_import: Modal<{text: string}> = new Modal({text: ''}, { \n        onOpen: () => {\n            nextTick(() => {\n                el_modal_import_text.value?.focus()\n            })\n        },\n        onClose: () => modal_import.data.text = \"\"\n    });\n    const modal_import_file_changed = (event: Event) => {\n        var reader = new FileReader();\n        reader.onload = (ev) => {\n            if ((ev.target?.result ?? false) && typeof ev.target?.result === 'string')\n                modal_import.data.text = ev.target?.result;\n        };\n        const event_target = event.target as HTMLInputElement;\n        if (event_target.files != null) {\n            reader.readAsText(event_target.files[0]);\n        }\n    }\n    const modal_import_import = () => {\n        let import_cont = modal_import.data.text;\n\n        if (import_cont.length == 0) {\n            toast.error(\"No import data is empty\")\n            return;\n        }\n\n        // Step 1: find JSON by boundary.\n        // Step 2: if boundary not exists, assume whole is JSON.\n        // Boundary requirements:\n        // Format: [START INLINE GRAPHDOC EXPORT]...{CONTENT}...[END INLINE GRAPHDOC EXPORT]\n        //  - The dots represent any 5 characters before encountering the accolades (for matching next to comments).\n        //  - Regex: /\\[START INLINE GRAPHDOC EXPORT\\].{0,5}(\\{.*\\}).{0,5}?\\[END INLINE GRAPHDOC EXPORT\\]/s\n\n        const boundary_result = import_cont.match(/\\[START INLINE GRAPHDOC EXPORT\\].{0,5}(\\{.*\\}).{0,5}?\\[END INLINE GRAPHDOC EXPORT\\]/s);\n        if (boundary_result && boundary_result[1]) {\n            import_cont = boundary_result[1];\n        }\n\n        let import_json: object = {};\n        try {\n            import_json = JSON.parse(import_cont);\n            if (!import_json)\n                throw Error(); // to trigger same exception\n        } catch (e) {\n            toast.error(\"Data does not contain valid JSON, or does not contain the GraphDoc boundary specifier.\")\n            // modal_import.data.error = \"Data does not contain valid JSON, or does not contain the GraphDoc boundary specifier.\"\n            return;\n        }\n\n        if (!Object.hasOwnProperty.call(import_json, \"main\") || \n            !Object.hasOwnProperty.call(import_json, \"nodes\") || \n            !Object.hasOwnProperty.call(import_json, \"edges\")) {\n            toast.error(\"Data does not include one of the required properties: 'main', 'nodes' or 'edges'.\");\n            // modal_import.data.error = \"Data does not include one of the required properties: 'main', 'nodes' or 'edges'.\"\n            return;\n        }\n        \n        const antv = (new Transformer()).in_json(import_json as JSONGraphData).out_antv();\n\n        props.graph?.fromJSON(antv);\n        props.docassemble_cont_update!();\n\n        toast.success(\"Imported\")\n        modal_import.close();\n    }\n\n    \n\n    const item_regenerate_docassemble = () => {\n        props.docassemble_cont_update!()\n    }\n    \n    const item_load_example = () => {\n        // props.docassemble_cont_update!()\n        if (confirm(\"Are you sure you want to load the example flowchart?\")) {\n            const json: JSONGraphData = {\"nodes\":[{\"id\":\"9ed5d853-62a0-4395-afb9-d94e8cffd2cd\",\"appearance\":{\"x\":270,\"y\":40,\"width\":180,\"height\":36},\"gd\":{\"type\":\"start\",\"content\":\"walk or bus?\",\"variable\":\"walk_or_bus\"}},{\"id\":\"b8bdd58d-ab1f-44d0-82b8-5edb21f3d484\",\"appearance\":{\"x\":270,\"y\":110,\"width\":180,\"height\":36},\"gd\":{\"type\":\"decision\",\"content\":\"is it raining?\",\"variable\":\"is_raining\"}},{\"id\":\"396a3b5e-a0cd-49c4-96c3-c65a8da0c483\",\"appearance\":{\"x\":90,\"y\":190,\"width\":180,\"height\":36},\"gd\":{\"type\":\"notice\",\"content\":\"take an umbrella\",\"variable\":\"notice_take_umbrella\"}},{\"id\":\"d9a60522-cc80-40bf-b691-5e51b27b0e6c\",\"appearance\":{\"x\":90,\"y\":260,\"width\":180,\"height\":36},\"gd\":{\"type\":\"end\",\"content\":\"take the bus\",\"variable\":\"end_bus\"}},{\"id\":\"20e3d21e-0799-4de7-8d1e-6cac260279ad\",\"appearance\":{\"x\":470,\"y\":260,\"width\":180,\"height\":36},\"gd\":{\"type\":\"end\",\"content\":\"take a walk\",\"variable\":\"end_walk\"}}],\"edges\":[{\"id\":\"5106836e-d49c-4d33-9ed4-c6b5048ee11f\",\"node_from_id\":\"b8bdd58d-ab1f-44d0-82b8-5edb21f3d484\",\"node_to_id\":\"396a3b5e-a0cd-49c4-96c3-c65a8da0c483\",\"gd\":{\"content\":\"Yes\"}},{\"id\":\"b81563a8-ad65-4d7e-86df-efbb0cf7fad4\",\"node_from_id\":\"b8bdd58d-ab1f-44d0-82b8-5edb21f3d484\",\"node_to_id\":\"20e3d21e-0799-4de7-8d1e-6cac260279ad\",\"gd\":{\"content\":\"No\"}},{\"id\":\"3008df09-bacb-4a33-9b3e-8e248e858c2b\",\"node_from_id\":\"396a3b5e-a0cd-49c4-96c3-c65a8da0c483\",\"node_to_id\":\"d9a60522-cc80-40bf-b691-5e51b27b0e6c\",\"gd\":{\"content\":null}},{\"id\":\"90c865d8-fbc3-4b7b-b0a3-46a8f1468c3e\",\"node_from_id\":\"9ed5d853-62a0-4395-afb9-d94e8cffd2cd\",\"node_to_id\":\"b8bdd58d-ab1f-44d0-82b8-5edb21f3d484\",\"gd\":{\"content\":null}}],\"main\":{\"name\":\"Untitled graph\"}};\n            const antv = (new Transformer()).in_json(json).out_antv();\n            props.graph?.fromJSON(antv);\n            props.docassemble_cont_update!();\n        }\n    }\n    \n    const item_use = () => {\n        // window.open(route('graph.show', [this.remote_graph_data.graph.id]), '_blank');\n    }\n    \n    const item_reload = () => {\n        // props.remote_graph_data_reload()\n    }\n\n    const item_save = () => {\n        // props.local_save()\n    }\n    \n    const item_undo = () => {\n        props.graph?.undo();\n    }\n    \n    const item_redo = () => {\n        props.graph?.redo();\n    }\n\n    const item_clear = () => {\n        // if (typeof props.init_modeler !== \"undefined\" && confirm(\"Are you sure you want to reset your workspace?\")){\n        //     props.init_modeler();\n        // }\n\n        if (confirm(\"Are you sure you want to reset your workspace?\")) {\n            props.graph?.removeCells(props.graph.getCells()); \n            // TODO: set view to original state\n        }\n    }\n\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    (_unref(modal_import).is_open)\n      ? (_openBlock(), _createBlock(ModalComponent, {\n          key: 0,\n          modal: _unref(modal_import),\n          container_style: {'max-width': '30rem'}\n        }, {\n          default: _withCtx(() => [\n            _createElementVNode(\"div\", _hoisted_1, [\n              _createElementVNode(\"div\", _hoisted_2, [\n                _hoisted_3,\n                _createElementVNode(\"div\", _hoisted_4, [\n                  _hoisted_5,\n                  _hoisted_6,\n                  _withDirectives(_createElementVNode(\"textarea\", {\n                    placeholder: \"Paste the contents of the interview here\",\n                    ref_key: \"el_modal_import_text\",\n                    ref: el_modal_import_text,\n                    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_unref(modal_import).data.text) = $event)),\n                    class: \"mt-2 w-full px-4 py-3 text-xs bg-gray-50 break-all font-mono resize-none h-20 leading-5 border border-gray-200 hover:shadow rounded-md\"\n                  }, \"\\n                \", 512), [\n                    [_vModelText, _unref(modal_import).data.text]\n                  ]),\n                  _createElementVNode(\"span\", _hoisted_7, [\n                    _hoisted_8,\n                    _createElementVNode(\"label\", _hoisted_9, [\n                      _hoisted_10,\n                      _createElementVNode(\"input\", {\n                        type: \"file\",\n                        class: \"hidden\",\n                        onChange: modal_import_file_changed\n                      }, null, 32)\n                    ]),\n                    _hoisted_11\n                  ])\n                ])\n              ])\n            ]),\n            _createElementVNode(\"div\", _hoisted_12, [\n              _createElementVNode(\"button\", {\n                onClick: _cache[1] || (_cache[1] = ($event: any) => (modal_import_import())),\n                type: \"button\",\n                class: \"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-blue-600 text-base font-medium text-white hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:ml-3 sm:w-auto sm:text-sm\"\n              }, \" Import\"),\n              _createElementVNode(\"button\", {\n                onClick: _cache[2] || (_cache[2] = ($event: any) => (_unref(modal_import).close())),\n                type: \"button\",\n                class: \"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\"\n              }, \" Cancel\")\n            ])\n          ]),\n          _: 1\n        }, 8, [\"modal\"]))\n      : _createCommentVNode(\"\", true),\n    _createElementVNode(\"div\", _hoisted_13, [\n      _createElementVNode(\"div\", _hoisted_14, [\n        _createElementVNode(\"button\", {\n          disabled: typeof __props.graph === 'undefined',\n          onClick: _cache[3] || (_cache[3] = ($event: any) => (item_undo()))\n        }, \"Undo\", 8, _hoisted_15)\n      ]),\n      _createElementVNode(\"div\", _hoisted_16, [\n        _createElementVNode(\"button\", {\n          disabled: typeof __props.graph === 'undefined',\n          onClick: _cache[4] || (_cache[4] = ($event: any) => (item_redo()))\n        }, \"Redo\", 8, _hoisted_17)\n      ]),\n      _createElementVNode(\"div\", _hoisted_18, [\n        _createElementVNode(\"button\", {\n          disabled: typeof __props.graph === 'undefined',\n          onClick: _cache[5] || (_cache[5] = ($event: any) => (item_clear()))\n        }, \"Clear\", 8, _hoisted_19)\n      ]),\n      _createElementVNode(\"div\", _hoisted_20, [\n        _createElementVNode(\"button\", {\n          class: \"bg-blue-200\",\n          disabled: typeof __props.graph === 'undefined',\n          onClick: _cache[6] || (_cache[6] = ($event: any) => (_unref(modal_import).open()))\n        }, \"Import\", 8, _hoisted_21)\n      ]),\n      _createElementVNode(\"div\", _hoisted_22, [\n        _createElementVNode(\"button\", {\n          class: \"bg-blue-200\",\n          disabled: typeof __props.graph === 'undefined',\n          onClick: _cache[7] || (_cache[7] = ($event: any) => (item_load_example()))\n        }, \"Load default example\", 8, _hoisted_23)\n      ])\n    ])\n  ], 64))\n}\n}\n\n})","import script from \"./GraphModelerToolbar.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./GraphModelerToolbar.vue?vue&type=script&lang=ts&setup=true\"\n\nimport \"./GraphModelerToolbar.vue?vue&type=style&index=0&id=ece8650a&lang=scss\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveDynamicComponent as _resolveDynamicComponent, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, normalizeClass as _normalizeClass } from \"vue\"\n\nconst _hoisted_1 = { class: \"block font-semibold mb-1 text-red-900\" }\nconst _hoisted_2 = { class: \"list-disc list-inside\" }\nconst _hoisted_3 = {\n  key: 1,\n  class: \"block text-sky-800\"\n}\n\nimport { VNode } from 'vue';\n    \n    \nexport default /*#__PURE__*/_defineComponent({\n  props: {\n    formatted_validation_errors: null\n  },\n  setup(__props: any) {\n\nconst props = __props as {formatted_validation_errors: (string | VNode)[][]}\n\n\n    \n\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass([\"overflow-hidden rounded-lg border hover:shadow-sm transition ease-in-out mt-4 mb-2 py-2 px-4\", {\n            'bg-red-50 border-red-900/20 hover:border-red-900/30': props.formatted_validation_errors.length > 0,\n            'bg-sky-100/10 border-sky-900/20 hover:border-sky-900/30': !(props.formatted_validation_errors.length > 0),\n        }])\n  }, [\n    (props.formatted_validation_errors.length > 0)\n      ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [\n          _createElementVNode(\"span\", _hoisted_1, \"There are \" + _toDisplayString(props.formatted_validation_errors.length) + \" errors in your graph\", 1),\n          _createElementVNode(\"ul\", _hoisted_2, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(props.formatted_validation_errors, (validation_error, vei) => {\n              return (_openBlock(), _createElementBlock(\"li\", {\n                class: \"validation-error text-red-800\",\n                key: vei\n              }, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(validation_error, (err_part) => {\n                  return (_openBlock(), _createElementBlock(_Fragment, { key: err_part }, [\n                    ((err_part as any).__v_isVNode ?? false)\n                      ? (_openBlock(), _createBlock(_resolveDynamicComponent(err_part), { key: 0 }))\n                      : (_openBlock(), _createElementBlock(_Fragment, { key: 1 }, [\n                          _createTextVNode(_toDisplayString(err_part), 1)\n                        ], 64))\n                  ], 64))\n                }), 128))\n              ]))\n            }), 128))\n          ])\n        ], 64))\n      : (_openBlock(), _createElementBlock(\"span\", _hoisted_3, \"Graph contains no errors\"))\n  ], 2))\n}\n}\n\n})","import script from \"./GraphValidationErrors.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./GraphValidationErrors.vue?vue&type=script&lang=ts&setup=true\"\n\nimport \"./GraphValidationErrors.vue?vue&type=style&index=0&id=7ed11b15&lang=scss\"\n\nconst __exports__ = script;\n\nexport default __exports__","// from: https://stackoverflow.com/a/57721086/17864167\nexport function download(filename: string, text: string, type=\"text/plain\") {\n  // Create an invisible A element\n  const a = document.createElement(\"a\");\n  a.style.display = \"none\";\n  document.body.appendChild(a);\n\n  // Set the HREF to a Blob representation of the data to be downloaded\n  a.href = window.URL.createObjectURL(\n    new Blob([text], { type })\n  );\n\n  // Use download attribute to set set desired file name\n  a.setAttribute(\"download\", filename);\n\n  // Trigger the download by simulating click\n  a.click();\n\n  // Cleanup\n  window.URL.revokeObjectURL(a.href);\n  document.body.removeChild(a);\n}\n","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode, createVNode as _createVNode, createBlock as _createBlock, unref as _unref, vModelCheckbox as _vModelCheckbox, withDirectives as _withDirectives, createStaticVNode as _createStaticVNode, Fragment as _Fragment } from \"vue\"\n\nconst _hoisted_1 = { class: \"mb-4\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", { class: \"text-4xl font-serif inline\" }, \"GraphDoc\", -1)\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"a\", {\n  class: \"inline-flex self-center ml-3\",\n  title: \"GitHub\",\n  href: \"https://github.com/maastrichtlawtech/graphdoc\",\n  target: \"_blank\"\n}, [\n  /*#__PURE__*/_createElementVNode(\"svg\", {\n    class: \"svg-github\",\n    fill: \"#1B1F23\",\n    viewBox: \"0 0 1024 1024\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, [\n    /*#__PURE__*/_createElementVNode(\"path\", {\n      \"fill-rule\": \"evenodd\",\n      \"clip-rule\": \"evenodd\",\n      d: \"M8 0C3.58 0 0 3.58 0 8C0 11.54 2.29 14.53 5.47 15.59C5.87 15.66 6.02 15.42 6.02 15.21C6.02 15.02 6.01 14.39 6.01 13.72C4 14.09 3.48 13.23 3.32 12.78C3.23 12.55 2.84 11.84 2.5 11.65C2.22 11.5 1.82 11.13 2.49 11.12C3.12 11.11 3.57 11.7 3.72 11.94C4.44 13.15 5.59 12.81 6.05 12.6C6.12 12.08 6.33 11.73 6.56 11.53C4.78 11.33 2.92 10.64 2.92 7.58C2.92 6.71 3.23 5.99 3.74 5.43C3.66 5.23 3.38 4.41 3.82 3.31C3.82 3.31 4.49 3.1 6.02 4.13C6.66 3.95 7.34 3.86 8.02 3.86C8.7 3.86 9.38 3.95 10.02 4.13C11.55 3.09 12.22 3.31 12.22 3.31C12.66 4.41 12.38 5.23 12.3 5.43C12.81 5.99 13.12 6.7 13.12 7.58C13.12 10.65 11.25 11.33 9.47 11.53C9.76 11.78 10.01 12.26 10.01 13.01C10.01 14.08 10 14.94 10 15.21C10 15.42 10.15 15.67 10.55 15.59C13.71 14.53 16 11.53 16 8C16 3.58 12.42 0 8 0Z\",\n      transform: \"scale(64)\"\n    })\n  ])\n], -1)\nconst _hoisted_4 = {\n  key: 0,\n  class: \"text-sm text-slate-900\"\n}\nconst _hoisted_5 = /*#__PURE__*/_createStaticVNode(\"<p class=\\\"mt-2\\\"> This tool serves as a PoC to convert flowcharts (which can be represented as directed acyclic graphs) to Docassemble interviews. The goal of this tool is to provide an intuitive interface for constructing Docassemble interviews, in which relations and dependencies between nodes (&#39;blocks&#39;) are more clearly visible. </p><h2 class=\\\"text-lg font-serif mt-2 mb-1\\\">Instructions</h2><p class=\\\"mb-1\\\"> Start by dragging nodes from the left sidebar. Connect nodes by dragging edges from and to the ports of the nodes. Configure nodes and edges by clicking on their cells and filling in the details in the config sidebar on the right. Nodes and edges can also be removed from this sidebar. If no output is produced, interpret the validation errors presented above the Docassemble output window. </p><p class=\\\"mb-1\\\"> For an example of a well-structured graph in GraphDoc, click on &#39;Load example&#39;. </p><h2 class=\\\"text-lg font-serif mt-2 mb-1\\\">Backup and publish</h2><p> When your graph is complete, you can copy or download the contents of the Docassemble interview configuration file. These contents can be tested in the Docassemble Playground, by pasting the contents in the <a class=\\\"styled\\\" href=\\\"https://docassemble.org/docs/playground.html#interview_files\\\" target=\\\"_blank\\\">YAML editor</a>. By default, the bottom of the generated interview contains a backup of the constructed graph in JSON. You can import the graph by clicking on &#39;Import&#39; in the toolbar and pasting or uploading the generated interview, or just appended JSON portion of the interview. </p>\", 6)\nconst _hoisted_11 = [\n  _hoisted_5\n]\nconst _hoisted_12 = { class: \"overflow-hidden rounded-lg border border-slate-900/20 hover:shadow-sm hover:border-slate-900/30 transition ease-in-out\" }\nconst _hoisted_13 = { class: \"w-full bg-gray-100\" }\nconst _hoisted_14 = {\n  class: \"w-full flex\",\n  style: {\"height\":\"500px\"}\n}\nconst _hoisted_15 = { class: \"w-20 flex-initial bg-gray-100 border-t border-gray-200\" }\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"modeler-container-box\",\n  class: \"flex flex-grow border-b-0 border-gray-300/90\",\n  style: {\"border-width\":\"3px\"}\n}, [\n  /*#__PURE__*/_createElementVNode(\"div\", {\n    id: \"modeler-container\",\n    style: {\"flex\":\"1\"}\n  })\n], -1)\nconst _hoisted_17 = { class: \"w-64 flex-initial bg-gray-100 border-t border-gray-200 overflow-y-auto\" }\nconst _hoisted_18 = { class: \"my-4\" }\nconst _hoisted_19 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"text-lg block mb-1\" }, \"Docassemble interview output\", -1)\nconst _hoisted_20 = { class: \"text-sm text-gray-700\" }\nconst _hoisted_21 = /*#__PURE__*/_createTextVNode(\" Include a copy of the model \")\nconst _hoisted_22 = { class: \"relative\" }\nconst _hoisted_23 = {\n  class: \"w-full min-h-4 font-mono border rounded p-2 mt-1 whitespace-pre-wrap\",\n  id: \"docassemble_out_container\"\n}\nconst _hoisted_24 = { class: \"actions\" }\nconst _hoisted_25 = [\"disabled\"]\nconst _hoisted_26 = /*#__PURE__*/_createElementVNode(\"svg\", {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  class: \"h-5 w-5\",\n  fill: \"none\",\n  viewBox: \"0 0 24 24\",\n  stroke: \"currentColor\",\n  \"stroke-width\": \"2\"\n}, [\n  /*#__PURE__*/_createElementVNode(\"path\", {\n    \"stroke-linecap\": \"round\",\n    \"stroke-linejoin\": \"round\",\n    d: \"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4\"\n  })\n], -1)\nconst _hoisted_27 = [\n  _hoisted_26\n]\nconst _hoisted_28 = [\"disabled\"]\n\nimport { h, onMounted, reactive, Ref, ref, VNode, watch } from 'vue';\n\n    import { useToast } from \"vue-toastification\";\n    \n    import { Cell, Graph } from '@antv/x6';\n\n    import GraphModelerConfigBar from './GraphModelerConfigBar.vue'\n    import GraphModelerElementsBar from './GraphModelerElementsBar.vue'\n    import GraphModelerToolbar from './GraphModelerToolbar.vue'\n    import GraphValidationErrors from './GraphValidationErrors.vue'\n    \n    import Transformer from '@/utils/transformer'\n    import { graph_options_defaults, graph_register_defaults } from '@/utils/antv-model'\n    import { DocassembleTransformer, validationErrorList } from '@/utils/transformer/docassemble';\n    import { Node, Edge } from '@/utils/graph';\n\n    import { download } from '@/utils/data/download';\n\n    \nexport default /*#__PURE__*/_defineComponent({\n  setup(__props) {\n\n\n    const read_more = ref(false);\n\n    onMounted(() => {\n        init_modeler()\n        docassemble_cont_update()\n    })\n\n    const graph_data: Ref<object> = ref({});\n    const graph: Ref<Graph | undefined> = ref();\n\n    const selected_cell: Ref<Cell | undefined> = ref();\n    function select_cell(cell: Cell | undefined) {\n        if (typeof cell !== 'undefined') {\n            selected_cell.value = cell;\n            graph.value?.select(cell);\n            graph.value?.scrollToCell(cell);\n        }\n    }\n\n    const docassemble_validation_errors: Ref<validationErrorList> = ref([]);\n    const formatted_validation_errors: Ref<(string | VNode)[][]> = ref([]);\n    const docassemble_cont: Ref<string> = ref('');\n\n    const docassemble_out_options = reactive({\n        include_json_export: true,\n    });\n\n    watch(() => docassemble_out_options, (val => {\n        // console.log(\"options updated\")\n        docassemble_cont_update();\n    }), { deep: true })\n\n    const docassemble_cont_update = () => {\n        if (typeof graph.value == \"undefined\")\n            return;\n        \n        const transformer = (new Transformer()).in_antv(graph.value);\n\n        docassemble_validation_errors.value = (new DocassembleTransformer()).validate_graph(transformer.graph);\n\n        // remove cells from all errors\n        graph.value.getCells().forEach(cell => \n            typeof cell.getData()?.errors !== 'undefined' &&\n            cell.setData({'errors': false}, {no_da_update: true}));\n         \n        // this part formats the conversion errors, which contain Node and Edge \n        // objects, to a clickable span as a VNode\n        formatted_validation_errors.value = docassemble_validation_errors.value.map((val_error) => {\n            return val_error.map(error_part => {\n                if (typeof error_part === \"string\") {\n                    return error_part;\n                } else if (error_part.is_node()) {\n                    const error_node = (error_part as Node);\n                    const antv_node = graph.value?.getCellById(error_node.id);\n                    if (typeof antv_node !== 'undefined') {\n                        antv_node.setData({errors: true}, {no_da_update: true});\n                        return h('span', {\n                            onClick() {\n                                select_cell(antv_node);\n                            },\n                            class: 'clickable-entity'\n                        }, error_node.get_variable());\n                    } else {\n                        return `\"${ error_node.get_variable() }\"\"`\n                    }\n                } else if (error_part.is_edge()) {\n                    const error_edge = (error_part as Edge);\n                    const antv_edge = graph.value?.getCellById(error_edge.id);\n                    const error_edge_content = error_edge.gd.content ? \n                        `with content ${error_edge.gd.content}` : \n                        `leaving from node ${ error_edge.get_node_from().get_label() }`;\n                    if (typeof antv_edge !== 'undefined') {\n                        return h('span', {\n                            onClick() {\n                                select_cell(graph.value?.getCellById(error_edge.gd.content ? error_edge.id : error_edge.node_from_id));\n                            },\n                            class: 'clickable-entity'\n                        }, error_edge_content);\n                    } else {\n                        return `\"${ error_edge_content }\"`\n                    }\n                } else {\n                    return ''\n                }\n            });\n        });\n\n        if(formatted_validation_errors.value.length == 0) {\n            docassemble_cont.value = transformer.out_docassemble()\n            if (docassemble_cont.value && docassemble_out_options.include_json_export) {\n                docassemble_cont.value = docassemble_cont.value\n                    .concat(\"\\n---\\n# [START INLINE GRAPHDOC EXPORT]\")\n                    .concat(\"\\n# \").concat(JSON.stringify(transformer.out_json()))\n                    .concat(\"\\n# [END INLINE GRAPHDOC EXPORT]\");\n            }\n        } else {\n            docassemble_cont.value = '-';\n        }\n    };\n\n    const copy_button_content = ref('COPY');\n    const copy_docassemble_out = () => {\n        \n        const el_docassemble_out_container = document.getElementById('docassemble_out_container');\n        if (el_docassemble_out_container)\n        {\n            (window as Window).getSelection()?.selectAllChildren(el_docassemble_out_container);\n\n            // source: https://stackoverflow.com/a/67008779/17864167\n            navigator.clipboard.writeText(docassemble_cont.value)\n            .then(() => {\n                copy_button_content.value = 'COPIED!';\n                setTimeout(() => { copy_button_content.value = 'COPY' }, 1200)\n            })\n            .catch(err => {\n                copy_button_content.value = 'FAILED';\n                setTimeout(() => { copy_button_content.value = 'COPY' }, 1200)\n                console.log('Failed to copy', err);\n            });\n        }\n    }\n    const download_docassemble_out = () => {\n        download(\"interview.yml\", docassemble_cont.value)\n    }\n\n    const register_events = (graph: Graph) => {\n        // https://x6.antv.vision/en/docs/tutorial/intermediate/events\n\n        graph.on('cell:change:*', (args) => {\n            // console.log(args)\n            if (!(args.options.no_da_update ?? false)) {\n                if (args.key == 'target') {\n                    // when target hits, it changes from {x: n, y: n} to Cell, which we will catch here.\n                    if (typeof args.current.cell != typeof args.previous.cell)\n                        docassemble_cont_update()\n\n                // other changes to ignore:\n                } else if (!['target', 'zIndex', 'tools', 'position'].includes(args.key as string))\n                    docassemble_cont_update()\n            }\n        })\n\n        graph.on('node:moved', docassemble_cont_update)\n\n        graph.on('cell:removed', docassemble_cont_update)\n        graph.on('cell:added', docassemble_cont_update)\n\n        graph.on('cell:selected', ({ cell, options }) => {\n            if (selected_cell.value != cell)\n                selected_cell.value = cell\n        })\n\n        graph.on('cell:unselected', ({ cell, options }) => {\n            if (selected_cell.value != null)\n                selected_cell.value = undefined\n        })\n\n        graph.on('blank:click', ({ e, x, y }) => {\n            if (selected_cell.value != null)\n                selected_cell.value = undefined\n        })\n    }\n\n    const init_modeler = () => {\n\n        const container = document.getElementById('modeler-container')!;\n        // let container_box = document.getElementById('modeler-container-box')!;\n\n        // const width = container.scrollWidth;\n        // const height = container.scrollHeight || 500;\n\n        graph.value = new Graph({\n            ...graph_options_defaults,\n\n            container: container,\n            autoResize: true,\n\n            // width,\n            // height,\n        })\n\n        if(graph.value != undefined)\n        {\n            graph_register_defaults(graph.value);\n            register_events(graph.value);\n\n            docassemble_cont_update()\n        }\n\n    };\n\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"span\", null, [\n        _hoisted_2,\n        _hoisted_3,\n        _createElementVNode(\"button\", {\n          onClick: _cache[0] || (_cache[0] = ($event: any) => (read_more.value = !read_more.value)),\n          class: \"font-normal underline-offset-4 underline hover:no-underline ml-4 py-1 px-2 text-gray-600 hover:text-gray-900\"\n        }, \"read \" + _toDisplayString(read_more.value ? 'less' : 'more'), 1)\n      ]),\n      (read_more.value)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, _hoisted_11))\n        : _createCommentVNode(\"\", true)\n    ]),\n    _createElementVNode(\"div\", _hoisted_12, [\n      _createElementVNode(\"div\", _hoisted_13, [\n        _createVNode(GraphModelerToolbar, {\n          graph: graph.value,\n          docassemble_cont_update: docassemble_cont_update,\n          init_modeler: init_modeler\n        }, null, 8, [\"graph\"])\n      ]),\n      _createElementVNode(\"div\", _hoisted_14, [\n        _createElementVNode(\"div\", _hoisted_15, [\n          (graph.value !== null)\n            ? (_openBlock(), _createBlock(GraphModelerElementsBar, {\n                key: 0,\n                graph: graph.value\n              }, null, 8, [\"graph\"]))\n            : _createCommentVNode(\"\", true)\n        ]),\n        _hoisted_16,\n        _createElementVNode(\"div\", _hoisted_17, [\n          _createVNode(GraphModelerConfigBar, { cell: selected_cell.value }, null, 8, [\"cell\"])\n        ])\n      ])\n    ]),\n    _createVNode(GraphValidationErrors, { formatted_validation_errors: formatted_validation_errors.value }, null, 8, [\"formatted_validation_errors\"]),\n    _createElementVNode(\"div\", _hoisted_18, [\n      _hoisted_19,\n      _createElementVNode(\"label\", _hoisted_20, [\n        _withDirectives(_createElementVNode(\"input\", {\n          type: \"checkbox\",\n          class: \"mr-1\",\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((_unref(docassemble_out_options).include_json_export) = $event))\n        }, null, 512), [\n          [_vModelCheckbox, _unref(docassemble_out_options).include_json_export]\n        ]),\n        _hoisted_21\n      ]),\n      _createElementVNode(\"div\", _hoisted_22, [\n        _createElementVNode(\"div\", _hoisted_23, _toDisplayString(docassemble_cont.value), 1),\n        _createElementVNode(\"div\", _hoisted_24, [\n          _createElementVNode(\"button\", {\n            onClick: _cache[2] || (_cache[2] = ($event: any) => (download_docassemble_out())),\n            title: \"Download YAML file\",\n            disabled: formatted_validation_errors.value.length > 0\n          }, _hoisted_27, 8, _hoisted_25),\n          _createElementVNode(\"button\", {\n            onClick: _cache[3] || (_cache[3] = ($event: any) => (copy_docassemble_out())),\n            title: \"Copy YMAL content\",\n            disabled: formatted_validation_errors.value.length > 0\n          }, _toDisplayString(copy_button_content.value), 9, _hoisted_28)\n        ])\n      ])\n    ])\n  ], 64))\n}\n}\n\n})","import script from \"./GraphModeler.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./GraphModeler.vue?vue&type=script&lang=ts&setup=true\"\n\nimport \"./GraphModeler.vue?vue&type=style&index=0&id=5f385cd2&lang=scss\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"mb-8 mt-4 mx-auto max-w-6xl\" }\n\nimport GraphModeler from './components/graph/GraphModeler.vue';\n\nexport default /*#__PURE__*/_defineComponent({\n  setup(__props) {\n\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createVNode(GraphModeler)\n  ]))\n}\n}\n\n})","import script from \"./App.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./App.vue?vue&type=script&lang=ts&setup=true\"\n\nimport \"./App.vue?vue&type=style&index=0&id=f0ad62f6&lang=scss\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { createApp } from 'vue'\nimport App from './App.vue'\n\nimport Toast from \"vue-toastification\";\nimport \"vue-toastification/dist/index.css\";\n\nimport './style/index.scss'\n\ncreateApp(App)\n    .use(Toast, {closeOnClick: false, draggable: false})\n    .mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkGraphDoc\"] = self[\"webpackChunkGraphDoc\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(3727); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["uuid","uuidv4","NodeDefault","appearance","x","y","width","height","gd","type","content","variable","Node","constructor","options","id","Object","assign","this","is_node","is_edge","get_label","toString","substring","get_variable","get_edges_in","graph","edges","filter","edge","node_to_id","get_edges_out","node_from_id","get_nodes_in","node_ids","map","nodes","node","includes","get_nodes_out","EdgeDefault","Edge","get_node_from","get_node_to","Graph","name","get_nodes_by_type","add_node","push","add_edge","clear","default_edge_label","text","attrs","position","distance","default_edge_attrs","line","strokeWidth","zIndex","graph_options_defaults","grid","background","color","mousewheel","enabled","zoomAtMousePosition","modifiers","minScale","maxScale","scroller","pannable","connecting","allowBlank","allowMulti","allowLoop","allowEdge","allowNode","allowPort","highlight","snap","connector","connectionPoint","anchor","validateMagnet","e","magnet","view","cell","getAttribute","createEdge","validateEdge","previous","validateConnection","sourceMagnet","targetMagnet","history","beforeAddCommand","event","args","key","resizing","selecting","multiple","graph_register_defaults","on","addTools","setTimeout","removeTool","s","offset","deltaY","Math","abs","control","floor","v1","v2","Path","default_port_groups","in","circle","r","stroke","out","default_node_ports","ports","default_ports","groups","items","port_group","group","node_type_default","node_html","render","data","getData","label","label_class","is_stencil_node","errors","shouldComponentUpdate","hasChanged","node_types","start","antv_metadata","shape","html","config_fields","general","additional","decision","notice","end","Modal","events","ref","reactive","open","is_open","value","onOpen","close","onClose","_withScopeId","n","_pushScopeId","_popScopeId","_hoisted_1","_createElementVNode","class","_hoisted_2","_hoisted_3","_defineComponent","props","modal","container_style","setup","__props","down_out_container","mousedown","down_target","target","container","document","querySelector","contains","mouseup","up_target","_ctx","_cache","_openBlock","_createBlock","_Teleport","to","_createVNode","_Transition","appear","default","_withCtx","_createElementBlock","role","onKeydown","_withKeys","$event","tabindex","onMousedown","onMouseup","style","_normalizeStyle","_renderSlot","$slots","_createCommentVNode","_","__exports__","emits","emit","editor","editorRef","onMounted","element","initialValue","spellChecker","EasyMDE","codemirror","onUnmounted","cleanup","ref_key","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_createTextVNode","_hoisted_11","href","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","xmlns","fill","viewBox","d","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","for","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","_hoisted_38","_hoisted_39","_hoisted_40","_hoisted_41","_hoisted_42","_hoisted_43","_hoisted_44","modal_field_content","read_more","node_content","modal_field_content_accept","current_fields","computed","field","node_type","current_node_fields","keys","fromEntries","entries","val","length","node_content_ref","get","set","setData","node_variable_ref","node_variable","edge_content_ref","edge_content","getLabelAt","edge_label","removeLabelAt","setLabelAt","isNode","_unref","ModalComponent","onClick","_toDisplayString","_Fragment","EasymdeView","onInput","remove","_renderList","fields","field_group","toUpperCase","concat","_withDirectives","_isRef","placeholder","_vModelText","isEdge","getSourceCell","dnd","watch","init_dnd","Addon","scaled","animation","validateNode","droppingNode","updateData","undefined","startDrag","currentTarget","createNode","node_type_name","_normalizeClass","indent","lines","spaces_per","repeat","DocassembleTransformer","validate_graph","node_start","nodes_end","variable_list","node_var","da_node_get_variable","amount","seperated_error_nodes","forEach","i","match","nodes_decision","node_decision","has_edge_out_content_null","content_edges_out","node_edges_out","edge_out","error_start","tmp_edge","L","S","pop","m","da_node_escaped_markdown","split","escaped","join","da_build_logic","code","node_edge_out","node_edge_out_content","sub_node","blocks","edges_out","buttons","sort","logic_code","block","Array","isArray","AntvisTransformer","antv_graph","local_data","getNodes","getEdges","loc_node","loc_node_data","rem_node","getPosition","getSize","loc_edge","getTargetCell","rem_edge","getSourceCellId","getTargetCellId","vertices","getVertices","data_nodes","last_x","values","node_ser","data_edges","edge_ser","labels","source","port","pick","obj","ret","JSONTransformer","in_json","main","out_json","json","antvis","docassemble","in_antv","out_antv","out_docassemble","docassemble_cont_update","Function","init_modeler","toast","useToast","el_modal_import_text","modal_import","nextTick","focus","modal_import_file_changed","reader","FileReader","onload","ev","result","event_target","files","readAsText","modal_import_import","import_cont","error","boundary_result","import_json","JSON","parse","Error","hasOwnProperty","call","antv","Transformer","fromJSON","success","item_load_example","confirm","item_undo","undo","item_redo","redo","item_clear","removeCells","getCells","onChange","disabled","formatted_validation_errors","validation_error","vei","err_part","__v_isVNode","_resolveDynamicComponent","download","filename","a","createElement","display","body","appendChild","window","URL","createObjectURL","Blob","setAttribute","click","revokeObjectURL","removeChild","title","transform","_createStaticVNode","selected_cell","select_cell","select","scrollToCell","docassemble_validation_errors","docassemble_cont","docassemble_out_options","include_json_export","deep","transformer","no_da_update","val_error","error_part","error_node","antv_node","getCellById","h","error_edge","antv_edge","error_edge_content","stringify","copy_button_content","copy_docassemble_out","el_docassemble_out_container","getElementById","getSelection","selectAllChildren","navigator","clipboard","writeText","then","catch","err","console","log","download_docassemble_out","register_events","current","autoResize","GraphModelerToolbar","GraphModelerElementsBar","GraphModelerConfigBar","GraphValidationErrors","_vModelCheckbox","GraphModeler","createApp","App","use","Toast","closeOnClick","draggable","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","splice","getter","__esModule","definition","o","defineProperty","enumerable","g","globalThis","prop","prototype","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}